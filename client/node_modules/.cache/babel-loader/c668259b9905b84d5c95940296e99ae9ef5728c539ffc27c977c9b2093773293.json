{"ast":null,"code":"export let NotesActionsTypes = /*#__PURE__*/function (NotesActionsTypes) {\n  NotesActionsTypes[\"ADD_NOTE\"] = \"ADD_NOTE\";\n  NotesActionsTypes[\"EDIT_NOTE\"] = \"EDIT_NOTE\";\n  NotesActionsTypes[\"ARCHIVE_OR_UNARCHIVE_NOTE\"] = \"ARCHIVE_OR_UNARCHIVE_NOTE\";\n  NotesActionsTypes[\"FETCH_NOTE\"] = \"FETCH_NOTE\";\n  NotesActionsTypes[\"FETCH_NOTE_SUCCESS\"] = \"FETCH_NOTE_SUCCESS\";\n  NotesActionsTypes[\"FETCH_NOTE_ERROR\"] = \"FETCH_NOTE_ERROR\";\n  return NotesActionsTypes;\n}({});","map":{"version":3,"names":["NotesActionsTypes"],"sources":["D:/gitHub/task3/client/src/types/notesTypes.ts"],"sourcesContent":["import { Category } from \"./categoryTypes\";\r\n\r\nexport enum NotesActionsTypes {\r\n    ADD_NOTE = 'ADD_NOTE',\r\n    EDIT_NOTE = 'EDIT_NOTE',\r\n    ARCHIVE_OR_UNARCHIVE_NOTE = 'ARCHIVE_OR_UNARCHIVE_NOTE',\r\n    FETCH_NOTE = 'FETCH_NOTE',\r\n    FETCH_NOTE_SUCCESS = 'FETCH_NOTE_SUCCESS',\r\n    FETCH_NOTE_ERROR = 'FETCH_NOTE_ERROR',\r\n}\r\n\r\nexport interface NotesState {\r\n    notes: any[];\r\n    loadingNotes: boolean;\r\n}\r\n\r\nexport interface NoteType {\r\n    id: number;\r\n    createdTime: string;\r\n    content: string;\r\n    category: Category;\r\n    archived: boolean;\r\n}\r\n\r\ninterface NotesActionFetch {\r\n    type: NotesActionsTypes.FETCH_NOTE;\r\n\r\n}\r\n\r\ninterface NotesActionFetchSuccess {\r\n    type: NotesActionsTypes.FETCH_NOTE_SUCCESS;\r\n    payload: NoteType[];\r\n\r\n}\r\n\r\ninterface NotesActionFetchError {\r\n    type: NotesActionsTypes.FETCH_NOTE_ERROR;\r\n    payload: string;\r\n}\r\n\r\ninterface NotesActionsDeleteOrArchive {\r\n    type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE;\r\n    payload: number;\r\n}\r\n\r\ninterface NotesActionsAdd {\r\n    type: NotesActionsTypes.ADD_NOTE;\r\n    payload: NoteType;\r\n}\r\n\r\ninterface NotesActionsEdit {\r\n    type: NotesActionsTypes.EDIT_NOTE;\r\n    payload: {\r\n        id: number;\r\n        content: string,\r\n        category: Category,\r\n    },\r\n    \r\n}\r\n\r\nexport type NotesAction = NotesActionsAdd | NotesActionsEdit | NotesActionsDeleteOrArchive | NotesActionFetch | NotesActionFetchSuccess | NotesActionFetchError;\r\n"],"mappings":"AAEA,WAAYA,iBAAiB,0BAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAjBA,iBAAiB;EAAA,OAAjBA,iBAAiB;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}