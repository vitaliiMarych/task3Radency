{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { NotesActionsTypes } from \"../types/notesTypes\";\nimport { useTypedSelector } from \"../hooks/useTypeSelector\";\nconst dispatch = useDispatch();\nconst {\n  notes\n} = useTypedSelector(state => state.note);\nexport const getActiveNotes = () => {\n  return getTypedNotes(notes).filter(note => !note.archived);\n};\nexport const getArchiveNotes = () => {\n  return getTypedNotes(notes).filter(note => note.archived);\n};\nexport const getTypedNotes = notes => {\n  return notes;\n};\nexport const addNote = (noteContent, noteCategory) => {\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n  const day = new Date().getDate();\n  dispatch({\n    type: NotesActionsTypes.ADD_NOTE,\n    payload: {\n      id: Math.max(...getTypedNotes(notes).map(note => note.id)) + 1,\n      createdTime: `${year}-${month}-${day}`,\n      content: noteContent,\n      category: noteCategory,\n      archived: false\n    }\n  });\n};\nexport const removeNote = idNote => {\n  dispatch({\n    type: NotesActionsTypes.DELETE_NOTE,\n    payload: idNote\n  });\n};\nexport const archiveNote = idNote => {\n  dispatch({\n    type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE,\n    payload: idNote\n  });\n};\nexport const editNote = note => {\n  // dispatch({\n\n  // });\n};","map":{"version":3,"names":["useDispatch","NotesActionsTypes","useTypedSelector","dispatch","notes","state","note","getActiveNotes","getTypedNotes","filter","archived","getArchiveNotes","addNote","noteContent","noteCategory","year","Date","getFullYear","month","getMonth","day","getDate","type","ADD_NOTE","payload","id","Math","max","map","createdTime","content","category","removeNote","idNote","DELETE_NOTE","archiveNote","ARCHIVE_OR_UNARCHIVE_NOTE","editNote"],"sources":["D:/gitHub/task2/src/services/noteService.ts"],"sourcesContent":["\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NoteType, NotesActionsTypes } from \"../types/notesTypes\";\r\nimport { useTypedSelector } from \"../hooks/useTypeSelector\";\r\nimport { Category } from \"../types/categoryTypes\";\r\n\r\nconst dispatch = useDispatch();\r\nconst {notes} = useTypedSelector(state => state.note);\r\n\r\nexport const getActiveNotes = () => {\r\n  return getTypedNotes(notes).filter(note => !note.archived);\r\n}\r\n\r\nexport const getArchiveNotes = () => {\r\n  return getTypedNotes(notes).filter(note => note.archived);\r\n}\r\n\r\nexport const getTypedNotes = (notes: NoteType[]) => {\r\n  return notes;\r\n}\r\n\r\nexport const addNote = (noteContent:string, noteCategory:string) => {\r\n  const year = new Date().getFullYear();\r\n  const month = new Date().getMonth() + 1;\r\n  const day = new Date().getDate();\r\n\r\n  dispatch({\r\n    type: NotesActionsTypes.ADD_NOTE,\r\n    payload: { \r\n        id: Math.max(...getTypedNotes(notes).map(note => note.id)) + 1,\r\n        createdTime: `${year}-${month}-${day}`,\r\n        content: noteContent,\r\n        category: noteCategory,\r\n        archived: false,\r\n    }\r\n  });\r\n}\r\n\r\nexport const removeNote = (idNote: number) => {\r\n  dispatch({\r\n    type: NotesActionsTypes.DELETE_NOTE,\r\n    payload: idNote\r\n  })\r\n}\r\n\r\nexport const archiveNote = (idNote: number) => {\r\n  dispatch({\r\n    type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE,\r\n    payload: idNote\r\n  })\r\n}\r\n\r\nexport const editNote = (note: NoteType) => {\r\n  // dispatch({\r\n\r\n  // });\r\n}"],"mappings":"AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAAmBC,iBAAiB,QAAQ,qBAAqB;AACjE,SAASC,gBAAgB,QAAQ,0BAA0B;AAG3D,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;AAC9B,MAAM;EAACI;AAAK,CAAC,GAAGF,gBAAgB,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;AAErD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOC,aAAa,CAACJ,KAAK,CAAC,CAACK,MAAM,CAACH,IAAI,IAAI,CAACA,IAAI,CAACI,QAAQ,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOH,aAAa,CAACJ,KAAK,CAAC,CAACK,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACI,QAAQ,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMF,aAAa,GAAIJ,KAAiB,IAAK;EAClD,OAAOA,KAAK;AACd,CAAC;AAED,OAAO,MAAMQ,OAAO,GAAGA,CAACC,WAAkB,EAAEC,YAAmB,KAAK;EAClE,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACrC,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC;EACvC,MAAMC,GAAG,GAAG,IAAIJ,IAAI,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;EAEhClB,QAAQ,CAAC;IACPmB,IAAI,EAAErB,iBAAiB,CAACsB,QAAQ;IAChCC,OAAO,EAAE;MACLC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,GAAGnB,aAAa,CAACJ,KAAK,CAAC,CAACwB,GAAG,CAACtB,IAAI,IAAIA,IAAI,CAACmB,EAAE,CAAC,CAAC,GAAG,CAAC;MAC9DI,WAAW,EAAG,GAAEd,IAAK,IAAGG,KAAM,IAAGE,GAAI,EAAC;MACtCU,OAAO,EAAEjB,WAAW;MACpBkB,QAAQ,EAAEjB,YAAY;MACtBJ,QAAQ,EAAE;IACd;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMsB,UAAU,GAAIC,MAAc,IAAK;EAC5C9B,QAAQ,CAAC;IACPmB,IAAI,EAAErB,iBAAiB,CAACiC,WAAW;IACnCV,OAAO,EAAES;EACX,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAME,WAAW,GAAIF,MAAc,IAAK;EAC7C9B,QAAQ,CAAC;IACPmB,IAAI,EAAErB,iBAAiB,CAACmC,yBAAyB;IACjDZ,OAAO,EAAES;EACX,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,QAAQ,GAAI/B,IAAc,IAAK;EAC1C;;EAEA;AAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}