{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport { Category } from './types/categoryTypes';\nimport { useDispatch } from 'react-redux';\nimport { fetchNotes } from './store/action-creator/note';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    fetchNotes();\n  });\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  const [modal, setModal] = React.useState(false);\n  const [index, setIndex] = React.useState(-1);\n  const [modalType, setModalType] = React.useState(modalTypes.ADD);\n  const [oldNoteContent, setOldNoteContent] = React.useState('');\n  const [oldNoteCategory, setOldNoteCategory] = React.useState(Category.TASK);\n  const modalProperties = {\n    visible: modal,\n    setVisible: setModal,\n    index,\n    setIndex,\n    method: modalType,\n    setMethod: setModalType,\n    oldNoteContent,\n    setOldNoteContent,\n    oldNoteCategory,\n    setOldNoteCategory\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      modalPropeties: modalProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      modalProperties: modalProperties,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModal(true);\n          setIndex(-1);\n          setModalType(modalTypes.ADD);\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      modalProperties: modalProperties,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: getInfoAboutCategoryes(notes),\n      type: \"summary small\",\n      isCategory: true,\n      modalProperties: modalProperties,\n      children: \"Summary info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gZgl9fkEAyCpUrGS5T+XXiZlQPU=\", false, function () {\n  return [useTypedSelector, useDispatch];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","NotesList","MyButton","MyModal","modalTypes","getActiveNotes","getArchiveNotes","useTypedSelector","getInfoAboutCategoryes","Category","useDispatch","fetchNotes","jsxDEV","_jsxDEV","App","_s","notes","state","note","dispatch","activeNotes","archivedNotes","modal","setModal","useState","index","setIndex","modalType","setModalType","ADD","oldNoteContent","setOldNoteContent","oldNoteCategory","setOldNoteCategory","TASK","modalProperties","visible","setVisible","method","setMethod","className","children","modalPropeties","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","onClickFunction","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalPropetiesType, modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport { Category } from './types/categoryTypes';\nimport { useDispatch } from 'react-redux';\nimport { fetchNotes } from './store/action-creator/note';\n\nfunction App() {\n  const {notes} = useTypedSelector(state => state.note);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    fetchNotes();\n  })\n\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  \n  const [modal, setModal] = React.useState(false);\n  const [index, setIndex] = React.useState(-1);\n  const [modalType, setModalType] = React.useState(modalTypes.ADD);\n  const [oldNoteContent, setOldNoteContent] = React.useState('');\n  const [oldNoteCategory, setOldNoteCategory] = React.useState(Category.TASK);\n\n  const modalProperties:modalPropetiesType = {\n    visible: modal,\n    setVisible: setModal,\n    index,\n    setIndex,\n    method: modalType,\n    setMethod: setModalType,\n    oldNoteContent,\n    setOldNoteContent,\n    oldNoteCategory,\n    setOldNoteCategory\n  }\n\n  return (\n    <div className=\"App\">\n\n      <MyModal modalPropeties={modalProperties}/>\n      <NotesList data={activeNotes} type='active big' isCategory = {false} \n        modalProperties={modalProperties}>Active list</NotesList>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {\n          setModal(true);\n          setIndex(-1);\n          setModalType(modalTypes.ADD);\n        }}>Add note</MyButton>\n      </div>\n      \n      <NotesList data={archivedNotes} type='archive big' isCategory = {false} \n        modalProperties={modalProperties}>Archived list</NotesList>\n      <NotesList data={getInfoAboutCategoryes(notes)} type='summary small' isCategory = {true}\n        modalProperties={modalProperties}>Summary info</NotesList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}