{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\UI\\\\MyForm\\\\MyForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport cl from './MyForm.module.css';\nimport MyButton from '../MyButton/MyButton';\nimport { modalTypes } from '../../../types/modalType';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\nimport { NotesActionsTypes } from '../../../types/notesTypes';\nimport { getAllNotes } from '../../../services/noteService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = ({\n  modalProperties\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  let onClickFunction = () => {\n    const year = new Date().getFullYear();\n    const month = new Date().getMonth() + 1;\n    const day = new Date().getDate();\n    const newId = Math.max(...getAllNotes(notes).map(note => note.id)) + 1;\n    dispatch({\n      type: NotesActionsTypes.ADD_NOTE,\n      payload: {\n        id: newId,\n        createdTime: `${year}-${month}-${day}`,\n        content: modalProperties.oldNoteContent,\n        category: modalProperties.oldNoteCategory,\n        archived: false\n      }\n    });\n    modalProperties.setVisible(false);\n    modalProperties.setOldNoteContent('');\n  };\n  if (modalProperties.method === modalTypes.EDIT) {\n    onClickFunction = () => {\n      dispatch({\n        type: NotesActionsTypes.EDIT_NOTE,\n        payload: {\n          id: modalProperties.index,\n          content: modalProperties.oldNoteContent,\n          category: modalProperties.oldNoteCategory\n        }\n      });\n      modalProperties.setVisible(false);\n      modalProperties.setOldNoteContent('');\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.myForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteContent\",\n        children: \"Note Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"noteContent\",\n        rows: 4,\n        cols: 50,\n        value: modalProperties.oldNoteContent,\n        onChange: e => modalProperties.setOldNoteContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteCategory\",\n        children: \"Note Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"noteCategory\",\n        value: modalProperties.oldNoteCategory,\n        onChange: e => modalProperties.setOldNoteCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Task\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Random Thought\",\n          children: \"Random Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Idea\",\n          children: \"Idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: onClickFunction,\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"wtIUh3RIe4eXysSps0Ze8I0Mkxc=\", false, function () {\n  return [useDispatch, useTypedSelector];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","cl","MyButton","modalTypes","useDispatch","useTypedSelector","NotesActionsTypes","getAllNotes","jsxDEV","_jsxDEV","MyForm","modalProperties","_s","dispatch","notes","state","note","onClickFunction","year","Date","getFullYear","month","getMonth","day","getDate","newId","Math","max","map","id","type","ADD_NOTE","payload","createdTime","content","oldNoteContent","category","oldNoteCategory","archived","setVisible","setOldNoteContent","method","EDIT","EDIT_NOTE","index","className","myForm","children","row","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","setOldNoteCategory","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/UI/MyForm/MyForm.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\r\n\r\nimport cl from './MyForm.module.css';\r\nimport MyButton from '../MyButton/MyButton';\r\nimport { modalPropetiesType, modalTypes } from '../../../types/modalType';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\r\nimport { NotesActionsTypes } from '../../../types/notesTypes';\r\nimport { getAllNotes } from '../../../services/noteService';\r\nimport { Category } from '../../../types/categoryTypes';\r\n\r\ninterface MyFormProps {\r\n    modalProperties: modalPropetiesType,\r\n}\r\n\r\nconst MyForm: FC<MyFormProps> = ({\r\n    modalProperties,\r\n}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {notes} = useTypedSelector(state => state.note);\r\n\r\n    let onClickFunction = () => {\r\n        const year = new Date().getFullYear();\r\n        const month = new Date().getMonth() + 1;\r\n        const day = new Date().getDate();\r\n\r\n        const newId = Math.max(...getAllNotes(notes).map(note => note.id)) + 1;\r\n    \r\n        dispatch({\r\n          type: NotesActionsTypes.ADD_NOTE,\r\n          payload: { \r\n              id: newId,\r\n              createdTime: `${year}-${month}-${day}`,\r\n              content: modalProperties.oldNoteContent,\r\n              category: modalProperties.oldNoteCategory,\r\n              archived: false,\r\n          }\r\n        });\r\n\r\n        modalProperties.setVisible(false);\r\n        modalProperties.setOldNoteContent('');\r\n    };\r\n\r\n    if (modalProperties.method === modalTypes.EDIT){\r\n\r\n        onClickFunction = () => {\r\n            dispatch({\r\n              type: NotesActionsTypes.EDIT_NOTE,\r\n              payload: { \r\n                  id: modalProperties.index,\r\n                  content: modalProperties.oldNoteContent,\r\n                  category: modalProperties.oldNoteCategory,\r\n              }\r\n            });\r\n    \r\n            modalProperties.setVisible(false);\r\n            modalProperties.setOldNoteContent('');\r\n        };\r\n    }\r\n\r\n  return (\r\n    <div className={cl.myForm}>\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteContent\">Note Content:</label>\r\n            <textarea id=\"noteContent\" rows={4} cols={50} \r\n                value={modalProperties.oldNoteContent} \r\n                onChange={e => modalProperties.setOldNoteContent(e.target.value)}></textarea>\r\n        \r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteCategory\">Note Category:</label>\r\n            <select id=\"noteCategory\" value={modalProperties.oldNoteCategory} \r\n                onChange={e => modalProperties.setOldNoteCategory(e.target.value)}\r\n            >\r\n                <option value=\"Task\">Task</option>\r\n                <option value=\"Random Thought\">Random Thought</option>\r\n                <option value=\"Idea\">Idea</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <MyButton onClickFunction={onClickFunction}>Save Note</MyButton>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}