{"ast":null,"code":"export const getActiveNotes = notes => {\n  return notes.filter(note => !note.archived);\n};\nexport const getArchiveNotes = notes => {\n  return notes.filter(note => note.archived);\n};\nexport const getInfoAboutCategoryes = (notes, category) => {\n  const activeCount = notes.filter(note => note.category === category && !note.archived).length;\n  const archivedCount = notes.filter(note => note.category === category && note.archived).length;\n  return {\n    activeCount,\n    archivedCount\n  };\n};","map":{"version":3,"names":["getActiveNotes","notes","filter","note","archived","getArchiveNotes","getInfoAboutCategoryes","category","activeCount","length","archivedCount"],"sources":["D:/gitHub/task2/src/services/noteService.ts"],"sourcesContent":["import { Category } from \"../types/categoryTypes\";\r\nimport { NoteType } from \"../types/notesTypes\";\r\n\r\nexport const getActiveNotes = (notes: NoteType[]) => {\r\n    return notes.filter(note => !note.archived);\r\n}\r\n\r\nexport const getArchiveNotes = (notes: NoteType[]) => {\r\n    return notes.filter(note => note.archived);\r\n}\r\n\r\nexport const getInfoAboutCategoryes = (notes: NoteType[], category: Category) => {\r\n\r\n  const activeCount = notes.filter(note => note.category === category && !note.archived).length;\r\n  const archivedCount = notes.filter(note => note.category === category && note.archived).length;\r\n\r\n  return {\r\n    activeCount,\r\n    archivedCount\r\n  }\r\n\r\n}"],"mappings":"AAGA,OAAO,MAAMA,cAAc,GAAIC,KAAiB,IAAK;EACjD,OAAOA,KAAK,CAACC,MAAM,CAACC,IAAI,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC;AAC/C,CAAC;AAED,OAAO,MAAMC,eAAe,GAAIJ,KAAiB,IAAK;EAClD,OAAOA,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,QAAQ,CAAC;AAC9C,CAAC;AAED,OAAO,MAAME,sBAAsB,GAAGA,CAACL,KAAiB,EAAEM,QAAkB,KAAK;EAE/E,MAAMC,WAAW,GAAGP,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACI,QAAQ,KAAKA,QAAQ,IAAI,CAACJ,IAAI,CAACC,QAAQ,CAAC,CAACK,MAAM;EAC7F,MAAMC,aAAa,GAAGT,KAAK,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACI,QAAQ,KAAKA,QAAQ,IAAIJ,IAAI,CAACC,QAAQ,CAAC,CAACK,MAAM;EAE9F,OAAO;IACLD,WAAW;IACXE;EACF,CAAC;AAEH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}