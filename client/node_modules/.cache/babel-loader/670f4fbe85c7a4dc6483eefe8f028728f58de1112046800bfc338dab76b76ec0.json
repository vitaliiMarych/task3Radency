{"ast":null,"code":"import { NotesActionsTypes } from \"../../types/notesTypes\";\nconst initialState = {\n  notes: [{\n    id: 1,\n    createdTime: '2023-7-25',\n    content: \"I'm gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\n    category: \"Task\",\n    archived: false\n  }, {\n    id: 2,\n    createdTime: '2023-7-24',\n    content: \"This is a random thought.\",\n    category: \"Random Thought\",\n    archived: false\n  }, {\n    id: 3,\n    createdTime: '2023-7-23',\n    content: \"I have an idea for a new project.\",\n    category: \"Idea\",\n    archived: false\n  }, {\n    id: 4,\n    createdTime: '2023-7-22',\n    content: \"Remember to buy groceries on 27/7/2021.\",\n    category: \"Task\",\n    archived: true\n  }, {\n    id: 5,\n    createdTime: '2023-7-21',\n    content: \"Don't forget the meeting on 26/7/2021.\",\n    category: \"Task\",\n    archived: false\n  }, {\n    id: 6,\n    createdTime: '2023-7-20',\n    content: \"I need to call the support team tomorrow.\",\n    category: \"Task\",\n    archived: false\n  }, {\n    id: 7,\n    createdTime: '2023-7-19',\n    content: \"I had an interesting idea today.\",\n    category: \"Idea\",\n    archived: false\n  }, {\n    id: 8,\n    createdTime: '2023-7-18',\n    content: \"This is an archived note.\",\n    category: \"Task\",\n    archived: true\n  }, {\n    id: 9,\n    createdTime: '2023-7-16',\n    content: \"I had an archived idea.\",\n    category: \"Idea\",\n    archived: true\n  }]\n};\nexport const notesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case NotesActionsTypes.ADD_NOTE:\n      {\n        return {\n          ...state,\n          notes: [...state.notes, action.payload]\n        };\n      }\n    case NotesActionsTypes.DELETE_NOTE:\n      {\n        return {\n          ...state,\n          notes: state.notes.filter(note => note.id !== action.payload)\n        };\n      }\n    case NotesActionsTypes.EDIT_NOTE:\n      {\n        const updatedNotes = state.notes.map(note => note.id === action.payload.id ? action.payload : note);\n        return {\n          ...state,\n          notes: updatedNotes\n        };\n      }\n    case NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE:\n      {\n        const updatedNotes = state.notes.map(note => note.id === action.payload ? {\n          ...note,\n          archived: !note.archived\n        } : note);\n        return {\n          ...state,\n          notes: updatedNotes\n        };\n      }\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["NotesActionsTypes","initialState","notes","id","createdTime","content","category","archived","notesReducer","state","action","type","ADD_NOTE","payload","DELETE_NOTE","filter","note","EDIT_NOTE","updatedNotes","map","ARCHIVE_OR_UNARCHIVE_NOTE"],"sources":["D:/gitHub/task2/src/store/reducers/notes.ts"],"sourcesContent":["import { NotesAction, NotesActionsTypes, NotesState } from \"../../types/notesTypes\";\r\n\r\n\r\nconst initialState: NotesState = {\r\n    notes: [\r\n        {\r\n            id : 1,\r\n            createdTime: '2023-7-25',\r\n            content: \"I'm gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\r\n            category: \"Task\",\r\n            archived: false,\r\n          },\r\n        \r\n          {\r\n            id : 2,\r\n            createdTime: '2023-7-24',\r\n            content: \"This is a random thought.\",\r\n            category: \"Random Thought\",\r\n            archived: false,\r\n          },\r\n        \r\n          {\r\n            id : 3,\r\n            createdTime: '2023-7-23',\r\n            content: \"I have an idea for a new project.\",\r\n            category: \"Idea\",\r\n            archived: false,\r\n          },\r\n        \r\n          {\r\n            id : 4,\r\n            createdTime: '2023-7-22',\r\n            content: \"Remember to buy groceries on 27/7/2021.\",\r\n            category: \"Task\",\r\n            archived: true,\r\n          },\r\n        \r\n          {\r\n            id : 5,\r\n            createdTime: '2023-7-21',\r\n            content: \"Don't forget the meeting on 26/7/2021.\",\r\n            category: \"Task\",\r\n            archived: false,\r\n          },\r\n        \r\n          {\r\n            id : 6,\r\n            createdTime: '2023-7-20',\r\n            content: \"I need to call the support team tomorrow.\",\r\n            category: \"Task\",\r\n            archived: false,\r\n          },\r\n        \r\n          {\r\n            id : 7,\r\n            createdTime: '2023-7-19',\r\n            content: \"I had an interesting idea today.\",\r\n            category: \"Idea\",\r\n            archived: false,\r\n          },\r\n        \r\n          {\r\n            id : 8,\r\n            createdTime: '2023-7-18',\r\n            content: \"This is an archived note.\",\r\n            category: \"Task\",\r\n            archived: true,\r\n          },\r\n        \r\n          {\r\n            id : 9,\r\n            createdTime: '2023-7-16',\r\n            content: \"I had an archived idea.\",\r\n            category: \"Idea\",\r\n            archived: true,\r\n          }\r\n    ],\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action:NotesAction) => {\r\n    \r\n    switch (action.type) {\r\n\r\n        case NotesActionsTypes.ADD_NOTE : {\r\n            return {...state, notes: [...state.notes, action.payload]};\r\n        }\r\n\r\n        case NotesActionsTypes.DELETE_NOTE : {\r\n            return {...state, notes: state.notes.filter(note => note.id !== action.payload)};\r\n        }\r\n\r\n        case NotesActionsTypes.EDIT_NOTE : {\r\n          const updatedNotes = state.notes.map((note) =>\r\n            note.id === action.payload.id ? action.payload : note\r\n          );\r\n\r\n          return { ...state, notes: updatedNotes };\r\n        }\r\n\r\n        case NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE : {\r\n          const updatedNotes = state.notes.map((note) =>\r\n            note.id === action.payload ? { ...note, archived: !note.archived } : note\r\n          );\r\n          \r\n          return { ...state, notes: updatedNotes };\r\n        }\r\n        \r\n        default: \r\n            return state;\r\n    }\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}