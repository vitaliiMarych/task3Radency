{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\components\\\\HeaderTable.tsx\";\nimport React from 'react';\nimport { isBig } from '../utils/otherUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderTable = ({\n  isCategory\n}) => {\n  const smallHeaderTable = ['Category', 'Active Notes Count', 'Archived Notes Count'];\n  const bigHeaderTable = ['Time of creation', 'Note content', 'Note category', 'Dates', 'Actions'];\n  const current = isCategory ? smallHeaderTable : bigHeaderTable;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notesTableHeader\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notesTableRow grayRow\",\n      children: current.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'notesTableCell ' + (isCategory && isBig(index) ? 'bigItem' : ''),\n        children: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = HeaderTable;\nexport default HeaderTable;\nvar _c;\n$RefreshReg$(_c, \"HeaderTable\");","map":{"version":3,"names":["React","isBig","jsxDEV","_jsxDEV","HeaderTable","isCategory","smallHeaderTable","bigHeaderTable","current","className","children","map","cell","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/components/HeaderTable.tsx"],"sourcesContent":["import React from 'react';\r\nimport { isBig } from '../utils/otherUtils';\r\n\r\n\r\ninterface HeaderTableProps {\r\n    isCategory: boolean;\r\n}\r\n\r\nconst HeaderTable: React.FC<HeaderTableProps> = ({\r\n    isCategory\r\n  }) => {\r\n  const smallHeaderTable = ['Category', 'Active Notes Count', 'Archived Notes Count'];\r\n  const bigHeaderTable = ['Time of creation','Note content','Note category','Dates','Actions'];\r\n\r\n  const current = isCategory ? smallHeaderTable : bigHeaderTable;\r\n\r\n  return (\r\n    <div className='notesTableHeader'>\r\n      <div className='notesTableRow grayRow'>\r\n        {current.map((cell, index) => (\r\n          <div className={'notesTableCell ' + ((isCategory && isBig(index)) ? 'bigItem' : '')}>{cell}</div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\nexport default HeaderTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5C,MAAMC,WAAuC,GAAGA,CAAC;EAC7CC;AACF,CAAC,KAAK;EACN,MAAMC,gBAAgB,GAAG,CAAC,UAAU,EAAE,oBAAoB,EAAE,sBAAsB,CAAC;EACnF,MAAMC,cAAc,GAAG,CAAC,kBAAkB,EAAC,cAAc,EAAC,eAAe,EAAC,OAAO,EAAC,SAAS,CAAC;EAE5F,MAAMC,OAAO,GAAGH,UAAU,GAAGC,gBAAgB,GAAGC,cAAc;EAE9D,oBACEJ,OAAA;IAAKM,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BP,OAAA;MAAKM,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EACnCF,OAAO,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACvBV,OAAA;QAAKM,SAAS,EAAE,iBAAiB,IAAKJ,UAAU,IAAIJ,KAAK,CAACY,KAAK,CAAC,GAAI,SAAS,GAAG,EAAE,CAAE;QAAAH,QAAA,EAAEE;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CACjG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAC,EAAA,GAjBKd,WAAuC;AAoB7C,eAAeA,WAAW;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}