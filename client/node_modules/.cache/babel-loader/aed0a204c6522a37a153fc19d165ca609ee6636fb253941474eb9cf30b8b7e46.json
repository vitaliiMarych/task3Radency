{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\HeaderTable.tsx\";\nimport React from 'react';\nimport TableItem from './TableItem';\nimport { modalTypes } from '../types/modalType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderTable = ({\n  type\n}) => {\n  const smallHeaderTable = ['Category', 'Active Notes Count', 'Archived Notes Count'];\n  const bigHeaderTable = ['Time of creation', 'Note content', 'Note category', 'Dates', 'Actions'];\n  const current = type === 'small' ? smallHeaderTable : bigHeaderTable;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notesTableHeader\",\n    children: /*#__PURE__*/_jsxDEV(TableItem, {\n      modalProperties: {\n        index: -1,\n        method: modalTypes.ADD,\n        visible: false,\n        oldNoteContent: '',\n        oldNoteCategory: '',\n        setIndex: () => {},\n        setMethod: () => {},\n        setVisible: () => {},\n        setOldNoteCategory: () => {},\n        setOldNoteContent: () => {}\n      },\n      cells: current,\n      typeTable: \"grayRow\",\n      idNote: -1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = HeaderTable;\nexport default HeaderTable;\nvar _c;\n$RefreshReg$(_c, \"HeaderTable\");","map":{"version":3,"names":["React","TableItem","modalTypes","jsxDEV","_jsxDEV","HeaderTable","type","smallHeaderTable","bigHeaderTable","current","className","children","modalProperties","index","method","ADD","visible","oldNoteContent","oldNoteCategory","setIndex","setMethod","setVisible","setOldNoteCategory","setOldNoteContent","cells","typeTable","idNote","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/HeaderTable.tsx"],"sourcesContent":["import React from 'react';\r\nimport TableItem from './TableItem';\r\nimport { modalTypes } from '../types/modalType';\r\n\r\n\r\ninterface HeaderTableProps {\r\n    type: string;\r\n}\r\n\r\nconst HeaderTable: React.FC<HeaderTableProps> = ({\r\n    type\r\n  }) => {\r\n  const smallHeaderTable = ['Category', 'Active Notes Count', 'Archived Notes Count'];\r\n  const bigHeaderTable = ['Time of creation','Note content','Note category','Dates','Actions'];\r\n\r\n  const current = type === 'small' ? smallHeaderTable : bigHeaderTable;\r\n\r\n  return (\r\n    <div className='notesTableHeader'>\r\n        <TableItem \r\n          modalProperties={{index: -1, method: modalTypes.ADD, visible: false, oldNoteContent: '', oldNoteCategory: '', \r\n            setIndex: ()=>{}, setMethod: ()=>{}, setVisible: ()=>{}, setOldNoteCategory : () => {}, setOldNoteContent : () => {}}}\r\n          cells={current} typeTable='grayRow' idNote={-1}></TableItem>\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\nexport default HeaderTable;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,UAAU,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOhD,MAAMC,WAAuC,GAAGA,CAAC;EAC7CC;AACF,CAAC,KAAK;EACN,MAAMC,gBAAgB,GAAG,CAAC,UAAU,EAAE,oBAAoB,EAAE,sBAAsB,CAAC;EACnF,MAAMC,cAAc,GAAG,CAAC,kBAAkB,EAAC,cAAc,EAAC,eAAe,EAAC,OAAO,EAAC,SAAS,CAAC;EAE5F,MAAMC,OAAO,GAAGH,IAAI,KAAK,OAAO,GAAGC,gBAAgB,GAAGC,cAAc;EAEpE,oBACEJ,OAAA;IAAKM,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BP,OAAA,CAACH,SAAS;MACRW,eAAe,EAAE;QAACC,KAAK,EAAE,CAAC,CAAC;QAAEC,MAAM,EAAEZ,UAAU,CAACa,GAAG;QAAEC,OAAO,EAAE,KAAK;QAAEC,cAAc,EAAE,EAAE;QAAEC,eAAe,EAAE,EAAE;QAC1GC,QAAQ,EAAEA,CAAA,KAAI,CAAC,CAAC;QAAEC,SAAS,EAAEA,CAAA,KAAI,CAAC,CAAC;QAAEC,UAAU,EAAEA,CAAA,KAAI,CAAC,CAAC;QAAEC,kBAAkB,EAAGA,CAAA,KAAM,CAAC,CAAC;QAAEC,iBAAiB,EAAGA,CAAA,KAAM,CAAC;MAAC,CAAE;MACxHC,KAAK,EAAEf,OAAQ;MAACgB,SAAS,EAAC,SAAS;MAACC,MAAM,EAAE,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAAAC,EAAA,GAhBK1B,WAAuC;AAmB7C,eAAeA,WAAW;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}