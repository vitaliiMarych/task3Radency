{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\components\\\\TableItem.tsx\";\nimport React from 'react';\nimport TableItemCell from './TableItemCell';\nimport { getCells, isBig } from '../utils/otherUtils';\nimport ButtonDiv from './UI/ButtonDiv/ButtonDiv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableItem = ({\n  extraClasses,\n  item,\n  setModalProperties\n}) => {\n  const cells = getCells(item);\n  const cl = 'notesTableRow blueRow ' + extraClasses;\n  const addBigItem = cells.length > 3;\n  const returnBigItem = (index, cell) => {\n    return /*#__PURE__*/_jsxDEV(TableItemCell, {\n      haveBigItem: isBig(index),\n      children: cell\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  };\n  const returnSmallItem = (index, cell) => {\n    return /*#__PURE__*/_jsxDEV(TableItemCell, {\n      children: cell\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  };\n  const returnButtonDiv = () => {\n    return /*#__PURE__*/_jsxDEV(ButtonDiv, {\n      idNote: item.id,\n      extraClasses: extraClasses,\n      setModalProperties: setModalProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl,\n    children: [cells.map((cell, index) => addBigItem ? returnBigItem(index, cell) : returnSmallItem(index, cell)), addBigItem ? returnButtonDiv() : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_c = TableItem;\nexport default TableItem;\nvar _c;\n$RefreshReg$(_c, \"TableItem\");","map":{"version":3,"names":["React","TableItemCell","getCells","isBig","ButtonDiv","jsxDEV","_jsxDEV","TableItem","extraClasses","item","setModalProperties","cells","cl","addBigItem","length","returnBigItem","index","cell","haveBigItem","children","fileName","_jsxFileName","lineNumber","columnNumber","returnSmallItem","returnButtonDiv","idNote","id","className","map","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/components/TableItem.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport TableItemCell from './TableItemCell';\r\nimport { getCells, isBig } from '../utils/otherUtils';\r\nimport ButtonDiv from './UI/ButtonDiv/ButtonDiv';\r\nimport { NoteType } from '../types/notesTypes';\r\nimport { CategoryType } from '../types/categoryTypes';\r\n\r\ninterface TableItemProps {\r\n  extraClasses: string,\r\n  item: NoteType | CategoryType,\r\n  setModalProperties: Function,\r\n\r\n}\r\n\r\nconst TableItem: React.FC<TableItemProps> = ({\r\n  extraClasses,\r\n  item,\r\n  setModalProperties,\r\n\r\n}) => {\r\n\r\n  const cells = getCells(item);\r\n  const cl = 'notesTableRow blueRow ' + extraClasses;\r\n\r\n  const addBigItem = cells.length > 3;\r\n\r\n  const returnBigItem = (index: number, cell: string) => {\r\n    return <TableItemCell haveBigItem = {isBig(index)} key={index}>{cell}</TableItemCell>\r\n  }\r\n\r\n  const returnSmallItem = (index: number, cell: string) => {\r\n    return <TableItemCell key={index}>{cell}</TableItemCell>\r\n  }\r\n\r\n  const returnButtonDiv = () => {\r\n    return <ButtonDiv idNote={item.id} extraClasses={extraClasses} setModalProperties={setModalProperties}/> \r\n  }\r\n\r\n  return (\r\n    <div className={cl}>\r\n\r\n      {cells.map((cell, index) => \r\n        addBigItem ?\r\n          returnBigItem(index, cell) : returnSmallItem(index, cell)\r\n      )}\r\n\r\n      {addBigItem ? returnButtonDiv() : ''}\r\n    </div>\r\n  )\r\n}\r\n  \r\n  \r\nexport default TableItem;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,QAAQ,EAAEC,KAAK,QAAQ,qBAAqB;AACrD,OAAOC,SAAS,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWjD,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,YAAY;EACZC,IAAI;EACJC;AAEF,CAAC,KAAK;EAEJ,MAAMC,KAAK,GAAGT,QAAQ,CAACO,IAAI,CAAC;EAC5B,MAAMG,EAAE,GAAG,wBAAwB,GAAGJ,YAAY;EAElD,MAAMK,UAAU,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC;EAEnC,MAAMC,aAAa,GAAGA,CAACC,KAAa,EAAEC,IAAY,KAAK;IACrD,oBAAOX,OAAA,CAACL,aAAa;MAACiB,WAAW,EAAIf,KAAK,CAACa,KAAK,CAAE;MAAAG,QAAA,EAAcF;IAAI,GAAZD,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAAC;EACvF,CAAC;EAED,MAAMC,eAAe,GAAGA,CAACR,KAAa,EAAEC,IAAY,KAAK;IACvD,oBAAOX,OAAA,CAACL,aAAa;MAAAkB,QAAA,EAAcF;IAAI,GAAZD,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CAAC;EAC1D,CAAC;EAED,MAAME,eAAe,GAAGA,CAAA,KAAM;IAC5B,oBAAOnB,OAAA,CAACF,SAAS;MAACsB,MAAM,EAAEjB,IAAI,CAACkB,EAAG;MAACnB,YAAY,EAAEA,YAAa;MAACE,kBAAkB,EAAEA;IAAmB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAC1G,CAAC;EAED,oBACEjB,OAAA;IAAKsB,SAAS,EAAEhB,EAAG;IAAAO,QAAA,GAEhBR,KAAK,CAACkB,GAAG,CAAC,CAACZ,IAAI,EAAED,KAAK,KACrBH,UAAU,GACRE,aAAa,CAACC,KAAK,EAAEC,IAAI,CAAC,GAAGO,eAAe,CAACR,KAAK,EAAEC,IAAI,CAC5D,CAAC,EAEAJ,UAAU,GAAGY,eAAe,CAAC,CAAC,GAAG,EAAE;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV,CAAC;AAAAO,EAAA,GAnCKvB,SAAmC;AAsCzC,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}