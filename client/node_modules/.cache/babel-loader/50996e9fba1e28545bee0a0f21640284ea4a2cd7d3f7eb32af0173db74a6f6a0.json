{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\Table.tsx\";\nimport React from 'react';\nimport TableItem from './TableItem';\nimport '../styles/Table.css';\nimport { getNoteCells, getNoteCellsCategory } from '../utils/otherUtils';\nimport HeaderTable from './HeaderTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Table = ({\n  data,\n  children,\n  type,\n  isCategory\n}) => {\n  const typeTable = 'blueRow ' + type;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notes\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(HeaderTable, {\n      type: \"big\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), data.map(row => /*#__PURE__*/_jsxDEV(TableItem, {\n      typeTable: typeTable,\n      cells: isCategory ? getNoteCellsCategory(row) : getNoteCells(row),\n      addButtons: true,\n      idNote: row.id\n    }, row.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Table;\nexport default Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","TableItem","getNoteCells","getNoteCellsCategory","HeaderTable","jsxDEV","_jsxDEV","Table","data","children","type","isCategory","typeTable","className","fileName","_jsxFileName","lineNumber","columnNumber","map","row","cells","addButtons","idNote","id","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/Table.tsx"],"sourcesContent":["import React from 'react';\r\nimport {NoteType} from '../types/notesTypes'\r\nimport TableItem from './TableItem';\r\nimport '../styles/Table.css';\r\nimport { getNoteCells, getNoteCellsCategory } from '../utils/otherUtils';\r\nimport HeaderTable from './HeaderTable';\r\n\r\ninterface TableProps {\r\n  data: any[],\r\n  type: string,\r\n  children: string,\r\n  isCategory: boolean,\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n    data,\r\n    children,\r\n    type,\r\n    isCategory\r\n  }) => {\r\n\r\n  const typeTable = 'blueRow ' + type;\r\n\r\n\r\n  return (\r\n    <div className='notes'>\r\n        <h2>{children}</h2>\r\n\r\n        <HeaderTable type='big'/>\r\n        {data.map((row) => \r\n          <TableItem typeTable={typeTable} \r\n          cells={isCategory? getNoteCellsCategory(row) : getNoteCells(row)} \r\n          addButtons={true} idNote={row.id} key={row.id}/>\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\nexport default Table;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,qBAAqB;AAC5B,SAASC,YAAY,EAAEC,oBAAoB,QAAQ,qBAAqB;AACxE,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASxC,MAAMC,KAA2B,GAAGA,CAAC;EACjCC,IAAI;EACJC,QAAQ;EACRC,IAAI;EACJC;AACF,CAAC,KAAK;EAEN,MAAMC,SAAS,GAAG,UAAU,GAAGF,IAAI;EAGnC,oBACEJ,OAAA;IAAKO,SAAS,EAAC,OAAO;IAAAJ,QAAA,gBAClBH,OAAA;MAAAG,QAAA,EAAKA;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEnBX,OAAA,CAACF,WAAW;MAACM,IAAI,EAAC;IAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACxBT,IAAI,CAACU,GAAG,CAAEC,GAAG,iBACZb,OAAA,CAACL,SAAS;MAACW,SAAS,EAAEA,SAAU;MAChCQ,KAAK,EAAET,UAAU,GAAER,oBAAoB,CAACgB,GAAG,CAAC,GAAGjB,YAAY,CAACiB,GAAG,CAAE;MACjEE,UAAU,EAAE,IAAK;MAACC,MAAM,EAAEH,GAAG,CAACI;IAAG,GAAMJ,GAAG,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACjD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEV,CAAC;AAAAO,EAAA,GAtBKjB,KAA2B;AAyBjC,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}