{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './styles/App.css';\nimport Table from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { Category } from './types/categoryTypes';\nimport { useActions } from './hooks/useActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes,\n    loadingNotes\n  } = useTypedSelector(state => state.note);\n  const {\n    notesStats,\n    loadingNotesStats\n  } = useTypedSelector(state => state.notesStats);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  const {\n    fetchNotes,\n    fetchNotesStats\n  } = useActions();\n  useEffect(() => {\n    fetchNotes();\n    fetchNotesStats();\n  }, []);\n  const [modalProperties, setModalProperties] = React.useState({\n    visible: false,\n    modalType: modalTypes.ADD,\n    index: -1,\n    oldNoteContent: '',\n    oldNoteCategory: Category.TASK\n  });\n  const createTable = (data, extraClasses, isCategory, setModalProperties, loading, children) => {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      data: data,\n      extraClasses: extraClasses,\n      isCategory: isCategory,\n      setModalProperties: setModalProperties,\n      loading: loading,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      modalProperties: modalProperties,\n      setModalProperties: setModalProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), createTable(activeNotes, 'active', false, setModalProperties, loadingNotes, 'Active list'), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModalProperties({\n            visible: true,\n            modalType: modalTypes.ADD,\n            index: -1,\n            oldNoteContent: '',\n            oldNoteCategory: Category.TASK\n          });\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), createTable(archivedNotes, 'archived', false, setModalProperties, loadingNotes, 'Archived list'), createTable(notesStats, 'summary', true, setModalProperties, loadingNotesStats, 'Summary info')]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SPN734DyPg/n5Gr63hudBdpXUxg=\", false, function () {\n  return [useTypedSelector, useTypedSelector, useActions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Table","MyButton","MyModal","modalTypes","getActiveNotes","getArchiveNotes","useTypedSelector","Category","useActions","jsxDEV","_jsxDEV","App","_s","notes","loadingNotes","state","note","notesStats","loadingNotesStats","activeNotes","archivedNotes","fetchNotes","fetchNotesStats","modalProperties","setModalProperties","useState","visible","modalType","ADD","index","oldNoteContent","oldNoteCategory","TASK","createTable","data","extraClasses","isCategory","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClickFunction","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport './styles/App.css';\r\nimport Table from './components/Table';\r\nimport MyButton from './components/UI/MyButton/MyButton';\r\nimport MyModal from './components/UI/MyModal/MyModal';\r\nimport { modalTypes } from './types/modalType';\r\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\r\nimport { useTypedSelector } from './hooks/useTypeSelector';\r\nimport { Category, CategoryType } from './types/categoryTypes';\r\nimport { useActions } from './hooks/useActions';\r\nimport { NoteType } from './types/notesTypes';\r\n\r\n\r\n\r\nfunction App() {\r\n  const {notes, loadingNotes} = useTypedSelector(state => state.note);\r\n  const {notesStats, loadingNotesStats} = useTypedSelector(state => state.notesStats)\r\n\r\n  const activeNotes = getActiveNotes(notes);\r\n  const archivedNotes = getArchiveNotes(notes);\r\n\r\n  const {fetchNotes, fetchNotesStats} = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n    fetchNotesStats();\r\n\r\n  }, [])\r\n\r\n\r\n  const [modalProperties, setModalProperties] = React.useState({\r\n    visible: false,\r\n    modalType: modalTypes.ADD,\r\n\r\n    index: -1,\r\n    oldNoteContent: '',\r\n    oldNoteCategory: Category.TASK,\r\n  })\r\n\r\n  const createTable = (data: CategoryType[] | NoteType[], extraClasses:string,\r\n                       isCategory: boolean, setModalProperties : Function, \r\n                       loading : boolean, children: string) => {\r\n    return (\r\n      <Table data={data} \r\n      extraClasses={extraClasses} \r\n      isCategory = {isCategory} \r\n      setModalProperties={setModalProperties} \r\n      loading={loading}>{children}</Table>\r\n    )\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n\r\n\r\n      <MyModal modalProperties={modalProperties} setModalProperties={setModalProperties}/>\r\n\r\n      {createTable(activeNotes, 'active', false, setModalProperties, loadingNotes, 'Active list')}\r\n      \r\n      <div className='buttonWrapper'>\r\n        <MyButton onClickFunction={() => {\r\n          setModalProperties({\r\n            visible: true,\r\n            modalType: modalTypes.ADD,\r\n            index: -1,\r\n            oldNoteContent: '',\r\n            oldNoteCategory: Category.TASK,\r\n          })\r\n        }}>Add note</MyButton>\r\n      </div>\r\n      \r\n      {createTable(archivedNotes, 'archived', false, setModalProperties, loadingNotes, 'Archived list')}\r\n\r\n      {createTable(notesStats, 'summary', true, setModalProperties, loadingNotesStats, 'Summary info')}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}