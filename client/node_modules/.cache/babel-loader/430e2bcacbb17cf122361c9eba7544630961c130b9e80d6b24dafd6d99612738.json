{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalType } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  const [modal, setModal] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      method: modalType.ADD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModal(true);\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ce/zP3XwjnBSDZGEirpGujE1oa0=\", false, function () {\n  return [useTypedSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NotesList","MyButton","MyModal","modalType","getActiveNotes","getArchiveNotes","useTypedSelector","jsxDEV","_jsxDEV","App","_s","notes","state","note","activeNotes","archivedNotes","modal","setModal","useState","className","children","visible","setVisible","method","ADD","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","onClickFunction","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalType } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from './hooks/useTypeSelector';\n\nfunction App() {\n  const {notes} = useTypedSelector(state => state.note);\n\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  \n  const [modal, setModal] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <MyModal visible={modal} setVisible={setModal} method={modalType.ADD}/>\n      <NotesList data={activeNotes} type='active big' isCategory = {false}>Active list</NotesList>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {\n          setModal(true);\n\n        }}>Add note</MyButton>\n      </div>\n      \n      <NotesList data={archivedNotes} type='archive big' isCategory = {false}>Archived list</NotesList>\n      {/* <NotesList data={getInfoAboutCategoryes()} type='summary small' isCategory = {true}>Summary info</NotesList> */}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAE1C,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,OAAO,MAAM,iCAAiC;AACrD,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,cAAc,EAAEC,eAAe,QAAQ,wBAAwB;AAExE,SAASC,gBAAgB,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAACC;EAAK,CAAC,GAAGL,gBAAgB,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAErD,MAAMC,WAAW,GAAGV,cAAc,CAACO,KAAK,CAAC;EACzC,MAAMI,aAAa,GAAGV,eAAe,CAACM,KAAK,CAAC;EAE5C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA,CAACN,OAAO;MAACmB,OAAO,EAAEL,KAAM;MAACM,UAAU,EAAEL,QAAS;MAACM,MAAM,EAAEpB,SAAS,CAACqB;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvEpB,OAAA,CAACR,SAAS;MAAC6B,IAAI,EAAEf,WAAY;MAACgB,IAAI,EAAC,YAAY;MAACC,UAAU,EAAI,KAAM;MAAAX,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAE5FpB,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BZ,OAAA,CAACP,QAAQ;QAAC+B,eAAe,EAAEA,CAAA,KAAM;UAC/Bf,QAAQ,CAAC,IAAI,CAAC;QAEhB,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAENpB,OAAA,CAACR,SAAS;MAAC6B,IAAI,EAAEd,aAAc;MAACe,IAAI,EAAC,aAAa;MAACC,UAAU,EAAI,KAAM;MAAAX,QAAA,EAAC;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE9F,CAAC;AAEV;AAAClB,EAAA,CAxBQD,GAAG;EAAA,QACMH,gBAAgB;AAAA;AAAA2B,EAAA,GADzBxB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}