{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\UI\\\\MyForm\\\\MyForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport cl from './MyForm.module.css';\nimport MyButton from '../MyButton/MyButton';\nimport { modalType } from '../../../types/modalType';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\nimport { NotesActionsTypes } from '../../../types/notesTypes';\nimport { getNotes } from '../../../services/noteService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = ({\n  method\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const onClickFunction = () => {\n    const year = new Date().getFullYear();\n    const month = new Date().getMonth() + 1;\n    const day = new Date().getDate();\n    const typedNotes = getNotes(notes);\n    console.log(typedNotes);\n    dispatch({\n      type: NotesActionsTypes.ADD_NOTE,\n      payload: {\n        id: Math.max(...typedNotes.map(note => note.id)) + 1,\n        createdTime: `${year}-${month}-${day}`,\n        content: noteContent,\n        category: noteCategory,\n        archived: false\n      }\n    });\n    console.log('fsefsefse');\n  };\n  if (method === modalType.EDIT) {}\n  const [noteContent, setNoteContent] = useState('');\n  const [noteCategory, setNoteCategory] = useState('Task');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.myForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteContent\",\n        children: \"Note Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"noteContent\",\n        rows: 4,\n        cols: 50,\n        value: noteContent,\n        onChange: e => setNoteContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteCategory\",\n        children: \"Note Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"noteCategory\",\n        value: noteCategory,\n        onChange: e => setNoteCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Task\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Random Thought\",\n          children: \"Random Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Idea\",\n          children: \"Idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: onClickFunction,\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"aQ9xZ4zQUC0ysiJmF5tGw0JChQs=\", false, function () {\n  return [useDispatch, useTypedSelector];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","cl","MyButton","modalType","useDispatch","useTypedSelector","NotesActionsTypes","getNotes","jsxDEV","_jsxDEV","MyForm","method","_s","dispatch","notes","state","note","onClickFunction","year","Date","getFullYear","month","getMonth","day","getDate","typedNotes","console","log","type","ADD_NOTE","payload","id","Math","max","map","createdTime","content","noteContent","category","noteCategory","archived","EDIT","setNoteContent","setNoteCategory","className","myForm","children","row","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/UI/MyForm/MyForm.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\r\n\r\nimport cl from './MyForm.module.css';\r\nimport MyButton from '../MyButton/MyButton';\r\nimport { modalType } from '../../../types/modalType';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\r\nimport { NotesActionsTypes } from '../../../types/notesTypes';\r\nimport { getNotes } from '../../../services/noteService';\r\nimport { Category } from '../../../types/categoryTypes';\r\n\r\ninterface MyFormProps {\r\n    method: modalType,\r\n}\r\n\r\nconst MyForm: FC<MyFormProps> = ({\r\n    method,\r\n}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {notes} = useTypedSelector(state => state.note);\r\n\r\n    const onClickFunction = () =>{\r\n        \r\n        const year = new Date().getFullYear();\r\n        const month = new Date().getMonth() + 1;\r\n        const day = new Date().getDate();\r\n\r\n        const typedNotes = getNotes(notes);\r\n\r\n        console.log(typedNotes)\r\n        dispatch({\r\n            type: NotesActionsTypes.ADD_NOTE,\r\n            payload: { \r\n                id: Math.max(...typedNotes.map(note => note.id)) + 1,\r\n                createdTime: `${year}-${month}-${day}`,\r\n                content: noteContent,\r\n                category: noteCategory,\r\n                archived: false,\r\n            }\r\n        })\r\n        console.log('fsefsefse');\r\n    };\r\n\r\n    if (method === modalType.EDIT){\r\n\r\n    }\r\n\r\n    const [noteContent, setNoteContent] = useState('');\r\n    const [noteCategory, setNoteCategory] = useState('Task'); \r\n\r\n  return (\r\n    <div className={cl.myForm}>\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteContent\">Note Content:</label>\r\n            <textarea id=\"noteContent\" rows={4} cols={50} \r\n                value={noteContent} onChange={e => setNoteContent(e.target.value)}></textarea>\r\n        \r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteCategory\">Note Category:</label>\r\n            <select id=\"noteCategory\" value={noteCategory} \r\n                    onChange={e => setNoteCategory(e.target.value)}\r\n            >\r\n                <option value=\"Task\">Task</option>\r\n                <option value=\"Random Thought\">Random Thought</option>\r\n                <option value=\"Idea\">Idea</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <MyButton onClickFunction={onClickFunction}>Save Note</MyButton>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MyForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAOC,QAAQ,QAAO,OAAO;AAEzC,OAAOC,EAAE,MAAM,qBAAqB;AACpC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,SAAS,QAAQ,0BAA0B;AACpD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,gCAAgC;AACjE,SAASC,iBAAiB,QAAQ,2BAA2B;AAC7D,SAASC,QAAQ,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOzD,MAAMC,MAAuB,GAAGA,CAAC;EAC7BC;AACJ,CAAC,KAAK;EAAAC,EAAA;EAEF,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM;IAACU;EAAK,CAAC,GAAGT,gBAAgB,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAErD,MAAMC,eAAe,GAAGA,CAAA,KAAK;IAEzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACrC,MAAMC,KAAK,GAAG,IAAIF,IAAI,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC;IACvC,MAAMC,GAAG,GAAG,IAAIJ,IAAI,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC;IAEhC,MAAMC,UAAU,GAAGlB,QAAQ,CAACO,KAAK,CAAC;IAElCY,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;IACvBZ,QAAQ,CAAC;MACLe,IAAI,EAAEtB,iBAAiB,CAACuB,QAAQ;MAChCC,OAAO,EAAE;QACLC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,GAAGR,UAAU,CAACS,GAAG,CAAClB,IAAI,IAAIA,IAAI,CAACe,EAAE,CAAC,CAAC,GAAG,CAAC;QACpDI,WAAW,EAAG,GAAEjB,IAAK,IAAGG,KAAM,IAAGE,GAAI,EAAC;QACtCa,OAAO,EAAEC,WAAW;QACpBC,QAAQ,EAAEC,YAAY;QACtBC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC;IACFd,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EAC5B,CAAC;EAED,IAAIhB,MAAM,KAAKR,SAAS,CAACsC,IAAI,EAAC,CAE9B;EAEA,MAAM,CAACJ,WAAW,EAAEK,cAAc,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACuC,YAAY,EAAEI,eAAe,CAAC,GAAG3C,QAAQ,CAAC,MAAM,CAAC;EAE1D,oBACES,OAAA;IAAKmC,SAAS,EAAE3C,EAAE,CAAC4C,MAAO;IAAAC,QAAA,gBACtBrC,OAAA;MAAKmC,SAAS,EAAE3C,EAAE,CAAC8C,GAAI;MAAAD,QAAA,gBACnBrC,OAAA;QAAOuC,OAAO,EAAC,aAAa;QAAAF,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClD3C,OAAA;QAAUsB,EAAE,EAAC,aAAa;QAACsB,IAAI,EAAE,CAAE;QAACC,IAAI,EAAE,EAAG;QACzCC,KAAK,EAAElB,WAAY;QAACmB,QAAQ,EAAEC,CAAC,IAAIf,cAAc,CAACe,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjF,CAAC,eAEN3C,OAAA;MAAKmC,SAAS,EAAE3C,EAAE,CAAC8C,GAAI;MAAAD,QAAA,gBACnBrC,OAAA;QAAOuC,OAAO,EAAC,cAAc;QAAAF,QAAA,EAAC;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpD3C,OAAA;QAAQsB,EAAE,EAAC,cAAc;QAACwB,KAAK,EAAEhB,YAAa;QACtCiB,QAAQ,EAAEC,CAAC,IAAId,eAAe,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAT,QAAA,gBAEnDrC,OAAA;UAAQ8C,KAAK,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClC3C,OAAA;UAAQ8C,KAAK,EAAC,gBAAgB;UAAAT,QAAA,EAAC;QAAc;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACtD3C,OAAA;UAAQ8C,KAAK,EAAC,MAAM;UAAAT,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAEN3C,OAAA;MAAKmC,SAAS,EAAE3C,EAAE,CAAC8C,GAAI;MAAAD,QAAA,eACnBrC,OAAA,CAACP,QAAQ;QAACe,eAAe,EAAEA,eAAgB;QAAA6B,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAAxC,EAAA,CA7DKF,MAAuB;EAAA,QAIRN,WAAW,EACZC,gBAAgB;AAAA;AAAAsD,EAAA,GAL9BjD,MAAuB;AAgE7B,eAAeA,MAAM;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}