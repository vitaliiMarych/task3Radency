{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\UI\\\\ButtonDiv\\\\ButtonDiv.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport cl from './ButtonDiv.module.css';\nimport ActionLink from '../actionLink/ActionLink';\nimport archiveIcon from '../../../assets/icons/archive.png';\nimport unarchiveIcon from '../../../assets/icons/unarchive.png';\nimport deleteIcon from '../../../assets/icons/delete.png';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\nimport * as UserServive from '../../../services/noteService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonDiv = ({\n  type,\n  idNote\n}) => {\n  _s();\n  const isArchived = type.includes('archive');\n  const dispatch = useDispatch();\n  const notes = useTypedSelector(state => state.note);\n  const deleteNote = () => {\n    UserServive.removeNote(idNote);\n  };\n  const archiveNote = () => {\n    UserServive.archiveNote(idNote);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.buttonDiv,\n    children: [isArchived ? /*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: unarchiveIcon,\n      alt: \"unarchive\",\n      onClickFunct: archiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: archiveIcon,\n      alt: \"archive\",\n      onClickFunct: archiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: deleteIcon,\n      alt: \"delete\",\n      onClickFunct: () => deleteNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonDiv, \"ZLIPTt+f5V5NJa5e35hawhpcYuU=\", false, function () {\n  return [useDispatch, useTypedSelector];\n});\n_c = ButtonDiv;\nexport default ButtonDiv;\nvar _c;\n$RefreshReg$(_c, \"ButtonDiv\");","map":{"version":3,"names":["React","cl","ActionLink","archiveIcon","unarchiveIcon","deleteIcon","useDispatch","useTypedSelector","UserServive","jsxDEV","_jsxDEV","ButtonDiv","type","idNote","_s","isArchived","includes","dispatch","notes","state","note","deleteNote","removeNote","archiveNote","className","buttonDiv","children","imageUrl","alt","onClickFunct","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/UI/ButtonDiv/ButtonDiv.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport cl from './ButtonDiv.module.css';\r\nimport ActionLink from '../actionLink/ActionLink';\r\nimport editIcon from '../../../assets/icons/edit.png';\r\nimport archiveIcon from '../../../assets/icons/archive.png';\r\nimport unarchiveIcon from '../../../assets/icons/unarchive.png';\r\nimport deleteIcon from '../../../assets/icons/delete.png';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\r\nimport { NotesActionsTypes } from '../../../types/notesTypes';\r\nimport * as UserServive from '../../../services/noteService';\r\n\r\ninterface ButtonDivProps {\r\n  type : string\r\n  idNote: number\r\n}\r\n\r\nconst ButtonDiv: React.FC<ButtonDivProps> = ({\r\n  type,\r\n  idNote\r\n\r\n}) => {\r\n\r\n  const isArchived = type.includes('archive');\r\n\r\n  const dispatch = useDispatch();\r\n  const notes = useTypedSelector(state => state.note);\r\n\r\n  const deleteNote = () => {UserServive.removeNote(idNote)}\r\n\r\n  const archiveNote = () => {UserServive.archiveNote(idNote)}\r\n\r\n  return (\r\n    <div className={cl.buttonDiv}>\r\n        {/* <ActionLink imageUrl={editIcon} alt='edit' idNote={idNote} funct={}/> */}\r\n\r\n        {\r\n        isArchived ? \r\n          <ActionLink imageUrl={unarchiveIcon} alt='unarchive' onClickFunct={archiveNote}/> :\r\n          <ActionLink imageUrl={archiveIcon} alt='archive' onClickFunct={archiveNote}/> \r\n          \r\n        }\r\n\r\n        <ActionLink imageUrl={deleteIcon} alt='delete' onClickFunct={() => deleteNote()}/>\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\nexport default ButtonDiv;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,EAAE,MAAM,wBAAwB;AACvC,OAAOC,UAAU,MAAM,0BAA0B;AAEjD,OAAOC,WAAW,MAAM,mCAAmC;AAC3D,OAAOC,aAAa,MAAM,qCAAqC;AAC/D,OAAOC,UAAU,MAAM,kCAAkC;AACzD,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,gBAAgB,QAAQ,gCAAgC;AAEjE,OAAO,KAAKC,WAAW,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7D,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,IAAI;EACJC;AAEF,CAAC,KAAK;EAAAC,EAAA;EAEJ,MAAMC,UAAU,GAAGH,IAAI,CAACI,QAAQ,CAAC,SAAS,CAAC;EAE3C,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,KAAK,GAAGX,gBAAgB,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAEnD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IAACb,WAAW,CAACc,UAAU,CAACT,MAAM,CAAC;EAAA,CAAC;EAEzD,MAAMU,WAAW,GAAGA,CAAA,KAAM;IAACf,WAAW,CAACe,WAAW,CAACV,MAAM,CAAC;EAAA,CAAC;EAE3D,oBACEH,OAAA;IAAKc,SAAS,EAAEvB,EAAE,CAACwB,SAAU;IAAAC,QAAA,GAIzBX,UAAU,gBACRL,OAAA,CAACR,UAAU;MAACyB,QAAQ,EAAEvB,aAAc;MAACwB,GAAG,EAAC,WAAW;MAACC,YAAY,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,gBACjFvB,OAAA,CAACR,UAAU;MAACyB,QAAQ,EAAExB,WAAY;MAACyB,GAAG,EAAC,SAAS;MAACC,YAAY,EAAEN;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAI/EvB,OAAA,CAACR,UAAU;MAACyB,QAAQ,EAAEtB,UAAW;MAACuB,GAAG,EAAC,QAAQ;MAACC,YAAY,EAAEA,CAAA,KAAMR,UAAU,CAAC;IAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAEV,CAAC;AAAAnB,EAAA,CA7BKH,SAAmC;EAAA,QAQtBL,WAAW,EACdC,gBAAgB;AAAA;AAAA2B,EAAA,GAT1BvB,SAAmC;AAgCzC,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}