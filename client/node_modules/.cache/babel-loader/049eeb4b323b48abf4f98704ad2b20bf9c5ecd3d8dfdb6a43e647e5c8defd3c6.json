{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from 'react';\nexport const useValidation = (value, validations) => {\n  _s();\n  const [minLenghtError, setMinLenghtError] = React.useState(false);\n  React.useEffect(() => {\n    for (const validation in validations) {\n      switch (validation) {\n        case 'minLength':\n          value.length < validations[validation] ? setMinLenghtError(true) : setMinLenghtError(false);\n          break;\n      }\n    }\n  }, [value]);\n  return {\n    minLenghtError\n  };\n};\n_s(useValidation, \"m+G2h43xyGND+2MULYKIpmwt+qw=\");","map":{"version":3,"names":["React","useValidation","value","validations","_s","minLenghtError","setMinLenghtError","useState","useEffect","validation","length"],"sources":["D:/gitHub/task3Radency/client/src/hooks/useValidation.ts"],"sourcesContent":["import React from 'react';\r\nimport { validationsType } from '../types/validationTypes';\r\n\r\nexport const useValidation = (value:string, validations:validationsType) => {\r\n    const [minLenghtError, setMinLenghtError] = React.useState(false);\r\n\r\n    React.useEffect(() => {\r\n        for (const validation in validations) {\r\n            switch (validation) {\r\n                case 'minLength': \r\n                    value.length < validations[validation] ? setMinLenghtError(true) : setMinLenghtError(false); \r\n                    break;\r\n            }\r\n        }\r\n\r\n    }, [value])\r\n\r\n    return {\r\n        minLenghtError,\r\n    }\r\n\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,aAAa,GAAGA,CAACC,KAAY,EAAEC,WAA2B,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;EAEjEP,KAAK,CAACQ,SAAS,CAAC,MAAM;IAClB,KAAK,MAAMC,UAAU,IAAIN,WAAW,EAAE;MAClC,QAAQM,UAAU;QACd,KAAK,WAAW;UACZP,KAAK,CAACQ,MAAM,GAAGP,WAAW,CAACM,UAAU,CAAC,GAAGH,iBAAiB,CAAC,IAAI,CAAC,GAAGA,iBAAiB,CAAC,KAAK,CAAC;UAC3F;MACR;IACJ;EAEJ,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC;EAEX,OAAO;IACHG;EACJ,CAAC;AAEL,CAAC;AAAAD,EAAA,CAlBYH,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}