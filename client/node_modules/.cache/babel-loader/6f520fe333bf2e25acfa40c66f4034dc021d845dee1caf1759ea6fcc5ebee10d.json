{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalType } from './types/modalType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const activeNotes = getActiveNotes();\n  const archivedNotes = getArchiveNotes();\n  const [modal, setModal] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      method: modalType.ADD\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModal(true);\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: getInfoAboutCategoryes(notes),\n      type: \"summary small\",\n      isCategory: true,\n      children: \"Summary info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FxRBWQPa/dKnwvdbY5qed8chvVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NotesList","getActiveNotes","getArchiveNotes","getInfoAboutCategoryes","MyButton","MyModal","modalType","jsxDEV","_jsxDEV","App","_s","activeNotes","archivedNotes","modal","setModal","useState","className","children","visible","setVisible","method","ADD","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","onClickFunction","notes","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalType } from './types/modalType';\n\nfunction App() {\n\n  const activeNotes = getActiveNotes();\n  const archivedNotes = getArchiveNotes();\n  \n  const [modal, setModal] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <MyModal visible={modal} setVisible={setModal} method={modalType.ADD}/>\n      <NotesList data={activeNotes} type='active big' isCategory = {false}>Active list</NotesList>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {\n          setModal(true);\n\n        }}>Add note</MyButton>\n      </div>\n      \n      <NotesList data={archivedNotes} type='archive big' isCategory = {false}>Archived list</NotesList>\n      <NotesList data={getInfoAboutCategoryes(notes)} type='summary small' isCategory = {true}>Summary info</NotesList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,cAAc,EAAEC,eAAe,QAAQ,wBAAwB;AACxE,SAASC,sBAAsB,QAAQ,4BAA4B;AACnE,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,OAAO,MAAM,iCAAiC;AACrD,SAASC,SAAS,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAMC,WAAW,GAAGV,cAAc,CAAC,CAAC;EACpC,MAAMW,aAAa,GAAGV,eAAe,CAAC,CAAC;EAEvC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGf,KAAK,CAACgB,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACEP,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA,CAACH,OAAO;MAACa,OAAO,EAAEL,KAAM;MAACM,UAAU,EAAEL,QAAS;MAACM,MAAM,EAAEd,SAAS,CAACe;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvEjB,OAAA,CAACR,SAAS;MAAC0B,IAAI,EAAEf,WAAY;MAACgB,IAAI,EAAC,YAAY;MAACC,UAAU,EAAI,KAAM;MAAAX,QAAA,EAAC;IAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAE5FjB,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BT,OAAA,CAACJ,QAAQ;QAACyB,eAAe,EAAEA,CAAA,KAAM;UAC/Bf,QAAQ,CAAC,IAAI,CAAC;QAEhB,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAENjB,OAAA,CAACR,SAAS;MAAC0B,IAAI,EAAEd,aAAc;MAACe,IAAI,EAAC,aAAa;MAACC,UAAU,EAAI,KAAM;MAAAX,QAAA,EAAC;IAAa;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACjGjB,OAAA,CAACR,SAAS;MAAC0B,IAAI,EAAEvB,sBAAsB,CAAC2B,KAAK,CAAE;MAACH,IAAI,EAAC,eAAe;MAACC,UAAU,EAAI,IAAK;MAAAX,QAAA,EAAC;IAAY;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9G,CAAC;AAEV;AAACf,EAAA,CAvBQD,GAAG;AAAAsB,EAAA,GAAHtB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}