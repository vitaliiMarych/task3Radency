{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport './styles/App.css';\nimport Table from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport { Category } from './types/categoryTypes';\nimport { useActions } from './hooks/useActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes,\n    loading\n  } = useTypedSelector(state => state.note);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  const {\n    fetchNotes\n  } = useActions();\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const [modalProperties, setModalProperties] = React.useState({\n    visible: false,\n    modalType: modalTypes.ADD,\n    index: -1,\n    oldNoteContent: '',\n    oldNoteCategory: Category.TASK\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      modalProperties: modalProperties,\n      setModalProperties: setModalProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      setModalProperties: setModalProperties,\n      loading: loading,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModalProperties({\n            visible: true,\n            modalType: modalTypes.ADD,\n            index: -1,\n            oldNoteContent: '',\n            oldNoteCategory: Category.TASK\n          });\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      setModalProperties: setModalProperties,\n      loading: loading,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      data: getInfoAboutCategoryes(notes),\n      type: \"summary small\",\n      isCategory: true,\n      setModalProperties: setModalProperties,\n      loading: loading,\n      children: \"Summary info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"paGCVN7c3zN8VIHbup58ZMpZaT4=\", false, function () {\n  return [useTypedSelector, useActions];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","Table","MyButton","MyModal","modalTypes","getActiveNotes","getArchiveNotes","useTypedSelector","getInfoAboutCategoryes","Category","useActions","jsxDEV","_jsxDEV","App","_s","notes","loading","state","note","activeNotes","archivedNotes","fetchNotes","modalProperties","setModalProperties","useState","visible","modalType","ADD","index","oldNoteContent","oldNoteCategory","TASK","className","children","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","onClickFunction","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport './styles/App.css';\nimport Table from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalPropetiesType, modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport { Category } from './types/categoryTypes';\nimport { useActions } from './hooks/useActions';\n\n\n\nfunction App() {\n  const {notes, loading} = useTypedSelector(state => state.note);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n\n  const {fetchNotes} = useActions();\n\n  useEffect(() => {\n    fetchNotes();\n  }, [])\n\n\n  const [modalProperties, setModalProperties] = React.useState({\n    visible: false,\n    modalType: modalTypes.ADD,\n\n    index: -1,\n    oldNoteContent: '',\n    oldNoteCategory: Category.TASK,\n  })\n\n\n  return (\n    <div className=\"App\">\n\n\n      <MyModal modalProperties={modalProperties} setModalProperties={setModalProperties}/>\n      <Table data={activeNotes} type='active big' \n        isCategory = {false} setModalProperties={setModalProperties} \n        loading={loading}>Active list</Table>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {\n          setModalProperties({\n            visible: true,\n            modalType: modalTypes.ADD,\n            index: -1,\n            oldNoteContent: '',\n            oldNoteCategory: Category.TASK,\n          })\n        }}>Add note</MyButton>\n      </div>\n      \n      <Table data={archivedNotes} type='archive big' \n        isCategory = {false} setModalProperties={setModalProperties}\n        loading={loading}>Archived list</Table>\n\n      <Table data={getInfoAboutCategoryes(notes)} type='summary small' \n        isCategory = {true} setModalProperties={setModalProperties}\n        loading={loading}>Summary info</Table>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}