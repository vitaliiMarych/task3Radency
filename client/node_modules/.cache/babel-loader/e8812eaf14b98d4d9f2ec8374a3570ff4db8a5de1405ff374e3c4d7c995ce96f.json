{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\UI\\\\MyModal\\\\MyModal.tsx\";\nimport React from 'react';\nimport cl from './MyModal.module.css';\nimport MyForm from '../MyForm/MyForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyModal = ({\n  method,\n  visible,\n  setVisible\n}) => {\n  const rootClasses = [cl.myModal];\n  if (visible) {\n    rootClasses.push(cl.active);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: rootClasses.join(' '),\n    onClick: () => setVisible(false),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.myModalContent,\n      onClick: e => e.stopPropagation(),\n      children: /*#__PURE__*/_jsxDEV(MyForm, {\n        method: method,\n        setVisible: setVisible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = MyModal;\nexport default MyModal;\nvar _c;\n$RefreshReg$(_c, \"MyModal\");","map":{"version":3,"names":["React","cl","MyForm","jsxDEV","_jsxDEV","MyModal","method","visible","setVisible","rootClasses","myModal","push","active","className","join","onClick","children","myModalContent","e","stopPropagation","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/UI/MyModal/MyModal.tsx"],"sourcesContent":["import React, {FC} from 'react';\r\n\r\nimport cl from './MyModal.module.css';\r\nimport { modalType } from '../../../types/modalType';\r\nimport MyForm from '../MyForm/MyForm';\r\n\r\ninterface MyModalProps {\r\n    method: modalType,\r\n    visible: boolean,\r\n    setVisible: Function,\r\n}\r\n\r\nconst MyModal: FC<MyModalProps> = ({\r\n    method,\r\n    visible,\r\n    setVisible\r\n}) => {\r\n\r\n    const rootClasses = [cl.myModal];\r\n\r\n    if (visible) {\r\n        rootClasses.push(cl.active);\r\n    }\r\n\r\n  return (\r\n    <div className={rootClasses.join(' ')} onClick={() => setVisible(false)}>\r\n        <div className={cl.myModalContent} onClick={(e) => e.stopPropagation()}>\r\n            <MyForm method={method} setVisible={setVisible}/>\r\n        </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default MyModal;"],"mappings":";AAAA,OAAOA,KAAK,MAAY,OAAO;AAE/B,OAAOC,EAAE,MAAM,sBAAsB;AAErC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQtC,MAAMC,OAAyB,GAAGA,CAAC;EAC/BC,MAAM;EACNC,OAAO;EACPC;AACJ,CAAC,KAAK;EAEF,MAAMC,WAAW,GAAG,CAACR,EAAE,CAACS,OAAO,CAAC;EAEhC,IAAIH,OAAO,EAAE;IACTE,WAAW,CAACE,IAAI,CAACV,EAAE,CAACW,MAAM,CAAC;EAC/B;EAEF,oBACER,OAAA;IAAKS,SAAS,EAAEJ,WAAW,CAACK,IAAI,CAAC,GAAG,CAAE;IAACC,OAAO,EAAEA,CAAA,KAAMP,UAAU,CAAC,KAAK,CAAE;IAAAQ,QAAA,eACpEZ,OAAA;MAAKS,SAAS,EAAEZ,EAAE,CAACgB,cAAe;MAACF,OAAO,EAAGG,CAAC,IAAKA,CAAC,CAACC,eAAe,CAAC,CAAE;MAAAH,QAAA,eACnEZ,OAAA,CAACF,MAAM;QAACI,MAAM,EAAEA,MAAO;QAACE,UAAU,EAAEA;MAAW;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGV,CAAC;AAAAC,EAAA,GApBKnB,OAAyB;AAuB/B,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}