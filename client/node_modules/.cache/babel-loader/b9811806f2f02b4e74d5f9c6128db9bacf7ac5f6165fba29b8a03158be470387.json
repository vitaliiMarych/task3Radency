{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModule';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      onClickFunction: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {},\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: getInfoAboutCategoryes(notes),\n      type: \"summary small\",\n      isCategory: true,\n      children: \"Summary info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"LDxHhvc09wxgry9Y0MQNYUHatw4=\", false, function () {\n  return [useTypedSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NotesList","useTypedSelector","getActiveNotes","getArchiveNotes","getInfoAboutCategoryes","MyButton","MyModal","jsxDEV","_jsxDEV","App","_s","notes","state","note","activeNotes","archivedNotes","className","children","onClickFunction","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModule';\n\nfunction App() {\n  const {notes} = useTypedSelector(state => state.note);\n\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  \n  return (\n    <div className=\"App\">\n      <MyModal onClickFunction={() => {}}/>\n      <NotesList data={activeNotes} type='active big' isCategory = {false}>Active list</NotesList>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {}}>Add note</MyButton>\n      </div>\n      \n      <NotesList data={archivedNotes} type='archive big' isCategory = {false}>Archived list</NotesList>\n      <NotesList data={getInfoAboutCategoryes(notes)} type='summary small' isCategory = {true}>Summary info</NotesList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,cAAc,EAAEC,eAAe,QAAQ,wBAAwB;AACxE,SAASC,sBAAsB,QAAQ,4BAA4B;AACnE,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,OAAO,MAAM,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAACC;EAAK,CAAC,GAAGV,gBAAgB,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAErD,MAAMC,WAAW,GAAGZ,cAAc,CAACS,KAAK,CAAC;EACzC,MAAMI,aAAa,GAAGZ,eAAe,CAACQ,KAAK,CAAC;EAE5C,oBACEH,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA,CAACF,OAAO;MAACY,eAAe,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACrCd,OAAA,CAACR,SAAS;MAACuB,IAAI,EAAET,WAAY;MAACU,IAAI,EAAC,YAAY;MAACC,UAAU,EAAI,KAAM;MAAAR,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAE5Fd,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BT,OAAA,CAACH,QAAQ;QAACa,eAAe,EAAEA,CAAA,KAAM,CAAC,CAAE;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eAENd,OAAA,CAACR,SAAS;MAACuB,IAAI,EAAER,aAAc;MAACS,IAAI,EAAC,aAAa;MAACC,UAAU,EAAI,KAAM;MAAAR,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACjGd,OAAA,CAACR,SAAS;MAACuB,IAAI,EAAEnB,sBAAsB,CAACO,KAAK,CAAE;MAACa,IAAI,EAAC,eAAe;MAACC,UAAU,EAAI,IAAK;MAAAR,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9G,CAAC;AAEV;AAACZ,EAAA,CAnBQD,GAAG;EAAA,QACMR,gBAAgB;AAAA;AAAAyB,EAAA,GADzBjB,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}