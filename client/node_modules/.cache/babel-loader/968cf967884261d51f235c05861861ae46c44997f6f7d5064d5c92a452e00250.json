{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\components\\\\UI\\\\MyForm\\\\MyForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport cl from './MyForm.module.css';\nimport MyButton from '../MyButton/MyButton';\nimport { modalTypes } from '../../../types/modalType';\nimport { Category } from '../../../types/categoryTypes';\nimport { updateObject } from '../../../utils/otherUtils';\nimport axios from 'axios';\nimport { useActions } from '../../../hooks/useActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = ({\n  modalProperties,\n  setModalProperties\n}) => {\n  _s();\n  const setStandartModel = () => {\n    setModalProperties({\n      visible: false,\n      oldNoteContent: '',\n      oldNoteCategory: Category.TASK,\n      modalType: modalTypes.ADD,\n      index: -1\n    });\n  };\n  const {\n    fetchNotes,\n    fetchNotesStats\n  } = useActions();\n  let onClickFunction = async () => {\n    let data = JSON.stringify({\n      \"noteContent\": modalProperties.oldNoteContent,\n      \"noteCategory\": modalProperties.oldNoteCategory\n    });\n    const config = getConfig(data);\n    await axios.request(config);\n    fetchNotes();\n    fetchNotesStats();\n    setStandartModel();\n  };\n  const getConfig = data => {\n    let method = 'post';\n    let url = 'http://localhost:4444/notes/';\n    if (modalProperties.modalType === modalTypes.EDIT) {\n      method = 'patch';\n      url += modalProperties.index;\n    }\n    return {\n      method: method,\n      maxBodyLength: Infinity,\n      url: url,\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      data: data\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.myForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteContent\",\n        children: \"Note Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"noteContent\",\n        rows: 4,\n        cols: 50,\n        value: modalProperties.oldNoteContent,\n        onChange: e => setModalProperties(updateObject(modalProperties, 'oldNoteContent', e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteCategory\",\n        children: \"Note Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"noteCategory\",\n        value: modalProperties.oldNoteCategory,\n        onChange: e => {\n          setModalProperties(updateObject(modalProperties, 'oldNoteCategory', e.target.value));\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Task\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Random Thought\",\n          children: \"Random Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Idea\",\n          children: \"Idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: onClickFunction,\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"wrVAe/BV3Z+IDWoVN7cy0GokRi8=\", false, function () {\n  return [useActions];\n});\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","cl","MyButton","modalTypes","Category","updateObject","axios","useActions","jsxDEV","_jsxDEV","MyForm","modalProperties","setModalProperties","_s","setStandartModel","visible","oldNoteContent","oldNoteCategory","TASK","modalType","ADD","index","fetchNotes","fetchNotesStats","onClickFunction","data","JSON","stringify","config","getConfig","request","method","url","EDIT","maxBodyLength","Infinity","headers","className","myForm","children","row","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","rows","cols","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/components/UI/MyForm/MyForm.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\r\n\r\nimport cl from './MyForm.module.css';\r\nimport MyButton from '../MyButton/MyButton';\r\nimport { modalPropetiesType, modalTypes } from '../../../types/modalType';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\r\nimport { NotesActionsTypes } from '../../../types/notesTypes';\r\nimport { getAllNotes } from '../../../services/noteService';\r\nimport { Category } from '../../../types/categoryTypes';\r\nimport { updateObject } from '../../../utils/otherUtils';\r\nimport axios from 'axios';\r\nimport { useActions } from '../../../hooks/useActions';\r\n\r\ninterface MyFormProps {\r\n    modalProperties: modalPropetiesType,\r\n    setModalProperties: Function,\r\n}\r\n\r\nconst MyForm: FC<MyFormProps> = ({\r\n    modalProperties,\r\n    setModalProperties,\r\n}) => {\r\n\r\n    const setStandartModel = () => {\r\n        setModalProperties({\r\n            visible: false,\r\n            oldNoteContent: '',\r\n            oldNoteCategory: Category.TASK,\r\n            modalType: modalTypes.ADD,\r\n            index: -1,\r\n        });\r\n    }\r\n\r\n    const {fetchNotes, fetchNotesStats} = useActions()\r\n\r\n    let onClickFunction = async () => {\r\n        let data = JSON.stringify({\r\n            \"noteContent\": modalProperties.oldNoteContent,\r\n            \"noteCategory\": modalProperties.oldNoteCategory\r\n        });\r\n\r\n        const config = getConfig(data);\r\n\r\n        await axios.request(config)\r\n\r\n        fetchNotes();\r\n        fetchNotesStats();\r\n\r\n        setStandartModel();\r\n    };\r\n\r\n    const getConfig = (data:Object) => {\r\n        let method = 'post';\r\n        let url = 'http://localhost:4444/notes/';\r\n\r\n        if (modalProperties.modalType === modalTypes.EDIT) {\r\n            method = 'patch';\r\n            url += modalProperties.index;\r\n        }\r\n\r\n        return {\r\n            method: method,\r\n            maxBodyLength: Infinity,\r\n            url: url,\r\n            headers: { \r\n                'Content-Type': 'application/json'\r\n            },\r\n            data : data\r\n        };\r\n    }\r\n\r\n  return (\r\n    <div className={cl.myForm}>\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteContent\">Note Content:</label>\r\n            <textarea id=\"noteContent\" rows={4} cols={50} \r\n                value={modalProperties.oldNoteContent} \r\n                onChange={e => \r\n                setModalProperties(updateObject(modalProperties, 'oldNoteContent', e.target.value))}\r\n            ></textarea>\r\n        \r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteCategory\">Note Category:</label>\r\n            <select id=\"noteCategory\" value={modalProperties.oldNoteCategory} \r\n                onChange={e => {\r\n                    setModalProperties(updateObject(modalProperties, 'oldNoteCategory', e.target.value))}}\r\n            >\r\n                <option value=\"Task\">Task</option>\r\n                <option value=\"Random Thought\">Random Thought</option>\r\n                <option value=\"Idea\">Idea</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <MyButton onClickFunction={onClickFunction}>Save Note</MyButton>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}