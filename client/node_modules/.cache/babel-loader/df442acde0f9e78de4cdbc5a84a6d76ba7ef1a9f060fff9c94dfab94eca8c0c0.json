{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useValidation } from \"./useValidation\";\nexport const useInput = (value, validations) => {\n  _s();\n  const [isDirty, setDirty] = useState(false);\n  const valid = useValidation(value, validations);\n  const onBlur = e => {\n    setDirty(true);\n  };\n  return {\n    isDirty,\n    onBlur,\n    ...valid\n  };\n};\n_s(useInput, \"mqXPkni0aHejkuZrDjIYKbjJkSE=\", false, function () {\n  return [useValidation];\n});","map":{"version":3,"names":["useState","useValidation","useInput","value","validations","_s","isDirty","setDirty","valid","onBlur","e"],"sources":["D:/gitHub/task3Radency/client/src/hooks/useInput.ts"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { validationsType } from \"../types/validationTypes\";\r\nimport { useValidation } from \"./useValidation\";\r\n\r\nexport const useInput = (value: string, validations: validationsType) => {\r\n    const [isDirty, setDirty] = useState(false);\r\n    const valid = useValidation(value, validations)\r\n\r\n    const onBlur = (e: React.FocusEvent) => {\r\n        setDirty(true);\r\n    }\r\n\r\n    return {\r\n        isDirty,\r\n        onBlur,\r\n        ...valid\r\n    }\r\n\r\n}\r\n"],"mappings":";AAAA,SAAiBA,QAAQ,QAAQ,OAAO;AAExC,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,KAAa,EAAEC,WAA4B,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMQ,KAAK,GAAGP,aAAa,CAACE,KAAK,EAAEC,WAAW,CAAC;EAE/C,MAAMK,MAAM,GAAIC,CAAmB,IAAK;IACpCH,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC;EAED,OAAO;IACHD,OAAO;IACPG,MAAM;IACN,GAAGD;EACP,CAAC;AAEL,CAAC;AAAAH,EAAA,CAdYH,QAAQ;EAAA,QAEHD,aAAa;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}