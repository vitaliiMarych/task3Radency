{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\NoteItem.tsx\";\nimport React from 'react';\nimport { extractDatesMentioned } from '../utils/utilsData';\nimport NoteItemCell from './NoteItemCell';\nimport { isBig } from '../utils/otherUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteItem = ({\n  note,\n  typeTable\n}) => {\n  const datesMentioned = extractDatesMentioned(note.content);\n  const cells = [note.createdTime, note.content, note.category, datesMentioned.join(', ')];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notesTableRow blueRow\",\n    children: cells.map((cell, index) => /*#__PURE__*/_jsxDEV(NoteItemCell, {\n      isBig: isBig(index),\n      children: cell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 37\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = NoteItem;\nexport default NoteItem;\nvar _c;\n$RefreshReg$(_c, \"NoteItem\");","map":{"version":3,"names":["React","extractDatesMentioned","NoteItemCell","isBig","jsxDEV","_jsxDEV","NoteItem","note","typeTable","datesMentioned","content","cells","createdTime","category","join","className","children","map","cell","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/NoteItem.tsx"],"sourcesContent":["import React from 'react';\r\nimport { NoteType } from '../types/notesTypes';\r\nimport { extractDatesMentioned } from '../utils/utilsData';\r\nimport NoteItemCell from './NoteItemCell';\r\nimport { isBig } from '../utils/otherUtils';\r\n\r\ninterface NoteItemProps {\r\n  note: NoteType,\r\n  typeTable: string,\r\n}\r\n\r\nconst NoteItem: React.FC<NoteItemProps> = ({\r\n  note,\r\n  typeTable\r\n\r\n}) => {\r\n\r\n  const datesMentioned = extractDatesMentioned(note.content);\r\n\r\n  const cells = [note.createdTime, note.content, note.category, datesMentioned.join(', ')];\r\n\r\n  return (\r\n    <div className='notesTableRow blueRow'>\r\n        {cells.map((cell, index) => <NoteItemCell isBig = {isBig(index)}>{cell}</NoteItemCell>)}\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\nexport default NoteItem;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,qBAAqB,QAAQ,oBAAoB;AAC1D,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,KAAK,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO5C,MAAMC,QAAiC,GAAGA,CAAC;EACzCC,IAAI;EACJC;AAEF,CAAC,KAAK;EAEJ,MAAMC,cAAc,GAAGR,qBAAqB,CAACM,IAAI,CAACG,OAAO,CAAC;EAE1D,MAAMC,KAAK,GAAG,CAACJ,IAAI,CAACK,WAAW,EAAEL,IAAI,CAACG,OAAO,EAAEH,IAAI,CAACM,QAAQ,EAAEJ,cAAc,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;EAExF,oBACET,OAAA;IAAKU,SAAS,EAAC,uBAAuB;IAAAC,QAAA,EACjCL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKd,OAAA,CAACH,YAAY;MAACC,KAAK,EAAIA,KAAK,CAACgB,KAAK,CAAE;MAAAH,QAAA,EAAEE;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtF,CAAC;AAEV,CAAC;AAAAC,EAAA,GAfKlB,QAAiC;AAkBvC,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}