{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  const [modal, setModal] = React.useState(false);\n  const [index, setIndex] = React.useState(-1);\n  const [modalType, setModalType] = React.useState(modalTypes.ADD);\n  const modalProperties = {\n    modal,\n    setModal,\n    index,\n    setIndex,\n    modalType,\n    setModalType\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      modalPropeties: modalProperties\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModal(true);\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: getInfoAboutCategoryes(notes),\n      type: \"summary small\",\n      isCategory: true,\n      children: \"Summary info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6buBqDy8YkuIwh4r2JhL8f6Zo2I=\", false, function () {\n  return [useTypedSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NotesList","MyButton","MyModal","modalTypes","getActiveNotes","getArchiveNotes","useTypedSelector","getInfoAboutCategoryes","jsxDEV","_jsxDEV","App","_s","notes","state","note","activeNotes","archivedNotes","modal","setModal","useState","index","setIndex","modalType","setModalType","ADD","modalProperties","className","children","modalPropeties","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","onClickFunction","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { modalTypes } from './types/modalType';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getInfoAboutCategoryes } from './services/categoryService';\n\nfunction App() {\n  const {notes} = useTypedSelector(state => state.note);\n\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  \n  const [modal, setModal] = React.useState(false);\n  const [index, setIndex] = React.useState(-1);\n  const [modalType, setModalType] = React.useState(modalTypes.ADD);\n\n  const modalProperties = {\n    modal,\n    setModal,\n    index,\n    setIndex,\n    modalType,\n    setModalType,\n  }\n\n  return (\n    <div className=\"App\">\n      <MyModal modalPropeties={modalProperties}/>\n      <NotesList data={activeNotes} type='active big' isCategory = {false}>Active list</NotesList>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {\n          setModal(true);\n\n        }}>Add note</MyButton>\n      </div>\n      \n      <NotesList data={archivedNotes} type='archive big' isCategory = {false}>Archived list</NotesList>\n      <NotesList data={getInfoAboutCategoryes(notes)} type='summary small' isCategory = {true}>Summary info</NotesList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}