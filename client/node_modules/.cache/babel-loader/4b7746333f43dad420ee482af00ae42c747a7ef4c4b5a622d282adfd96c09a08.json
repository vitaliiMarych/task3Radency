{"ast":null,"code":"import { extractDatesMentioned } from \"./utilsData\";\nexport const isBig = index => {\n  if (index === 1) {\n    return true;\n  }\n  return false;\n};\nexport const getNoteCells = note => {\n  const datesMentioned = extractDatesMentioned(note.content);\n  const cells = [note.createdTime, note.content, note.category, datesMentioned.join(', ')];\n  return cells;\n};\nexport const getNoteCellsCategory = categoryInfo => {\n  return [categoryInfo.category, categoryInfo.activeCount, categoryInfo.archivedCount];\n};","map":{"version":3,"names":["extractDatesMentioned","isBig","index","getNoteCells","note","datesMentioned","content","cells","createdTime","category","join","getNoteCellsCategory","categoryInfo","activeCount","archivedCount"],"sources":["D:/gitHub/task3/client/src/utils/otherUtils.ts"],"sourcesContent":["import { CategoryType } from \"../types/categoryTypes\";\r\nimport { NoteType } from \"../types/notesTypes\";\r\nimport { extractDatesMentioned } from \"./utilsData\";\r\n\r\nexport const isBig = (index: number) => {\r\n    if (index === 1){\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport const getNoteCells = (note: NoteType) => {\r\n  const datesMentioned = extractDatesMentioned(note.content);\r\n  const cells = [note.createdTime, note.content, note.category, datesMentioned.join(', '),];\r\n\r\n  return cells;\r\n} \r\n\r\nexport const getNoteCellsCategory = (categoryInfo: CategoryType) => {\r\n    return [categoryInfo.category, categoryInfo.activeCount, categoryInfo.archivedCount];\r\n}\r\n\r\n\r\n"],"mappings":"AAEA,SAASA,qBAAqB,QAAQ,aAAa;AAEnD,OAAO,MAAMC,KAAK,GAAIC,KAAa,IAAK;EACpC,IAAIA,KAAK,KAAK,CAAC,EAAC;IACZ,OAAO,IAAI;EACf;EACA,OAAO,KAAK;AAChB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIC,IAAc,IAAK;EAC9C,MAAMC,cAAc,GAAGL,qBAAqB,CAACI,IAAI,CAACE,OAAO,CAAC;EAC1D,MAAMC,KAAK,GAAG,CAACH,IAAI,CAACI,WAAW,EAAEJ,IAAI,CAACE,OAAO,EAAEF,IAAI,CAACK,QAAQ,EAAEJ,cAAc,CAACK,IAAI,CAAC,IAAI,CAAC,CAAE;EAEzF,OAAOH,KAAK;AACd,CAAC;AAED,OAAO,MAAMI,oBAAoB,GAAIC,YAA0B,IAAK;EAChE,OAAO,CAACA,YAAY,CAACH,QAAQ,EAAEG,YAAY,CAACC,WAAW,EAAED,YAAY,CAACE,aAAa,CAAC;AACxF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}