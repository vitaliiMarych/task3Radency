{"ast":null,"code":"import { useDispatch } from \"react-redux\";\nimport { NotesActionsTypes } from \"../types/notesTypes\";\nimport { useTypedSelector } from \"../hooks/useTypeSelector\";\nconst dispatch = useDispatch();\nconst {\n  notes\n} = useTypedSelector(state => state.note);\nexport const getActiveNotes = () => {\n  return getTypedNotes(notes).filter(note => !note.archived);\n};\nexport const getArchiveNotes = () => {\n  return getTypedNotes(notes).filter(note => note.archived);\n};\nexport const getTypedNotes = notes => {\n  return notes;\n};\nexport const addNote = note => {\n  dispatch({});\n};\nexport const removeNote = idNote => {\n  dispatch({\n    type: NotesActionsTypes.DELETE_NOTE,\n    payload: idNote\n  });\n};\nexport const archiveNote = idNote => {\n  dispatch({\n    type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE,\n    payload: idNote\n  });\n};\nexport const editNote = note => {\n  // dispatch({\n\n  // });\n};","map":{"version":3,"names":["useDispatch","NotesActionsTypes","useTypedSelector","dispatch","notes","state","note","getActiveNotes","getTypedNotes","filter","archived","getArchiveNotes","addNote","removeNote","idNote","type","DELETE_NOTE","payload","archiveNote","ARCHIVE_OR_UNARCHIVE_NOTE","editNote"],"sources":["D:/gitHub/task2/src/services/noteService.ts"],"sourcesContent":["\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NoteType, NotesActionsTypes } from \"../types/notesTypes\";\r\nimport { useTypedSelector } from \"../hooks/useTypeSelector\";\r\n\r\nconst dispatch = useDispatch();\r\nconst {notes} = useTypedSelector(state => state.note);\r\n\r\nexport const getActiveNotes = () => {\r\n  return getTypedNotes(notes).filter(note => !note.archived);\r\n}\r\n\r\nexport const getArchiveNotes = () => {\r\n  return getTypedNotes(notes).filter(note => note.archived);\r\n}\r\n\r\nexport const getTypedNotes = (notes: NoteType[]) => {\r\n  return notes;\r\n}\r\n\r\nexport const addNote = (note: NoteType) => {\r\n  dispatch({\r\n\r\n  });\r\n}\r\n\r\nexport const removeNote = (idNote: number) => {\r\n  dispatch({\r\n    type: NotesActionsTypes.DELETE_NOTE,\r\n    payload: idNote\r\n  })\r\n}\r\n\r\nexport const archiveNote = (idNote: number) => {\r\n  dispatch({\r\n    type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE,\r\n    payload: idNote\r\n  })\r\n}\r\n\r\nexport const editNote = (note: NoteType) => {\r\n  // dispatch({\r\n\r\n  // });\r\n}"],"mappings":"AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,SAAmBC,iBAAiB,QAAQ,qBAAqB;AACjE,SAASC,gBAAgB,QAAQ,0BAA0B;AAE3D,MAAMC,QAAQ,GAAGH,WAAW,CAAC,CAAC;AAC9B,MAAM;EAACI;AAAK,CAAC,GAAGF,gBAAgB,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;AAErD,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,OAAOC,aAAa,CAACJ,KAAK,CAAC,CAACK,MAAM,CAACH,IAAI,IAAI,CAACA,IAAI,CAACI,QAAQ,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAOH,aAAa,CAACJ,KAAK,CAAC,CAACK,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACI,QAAQ,CAAC;AAC3D,CAAC;AAED,OAAO,MAAMF,aAAa,GAAIJ,KAAiB,IAAK;EAClD,OAAOA,KAAK;AACd,CAAC;AAED,OAAO,MAAMQ,OAAO,GAAIN,IAAc,IAAK;EACzCH,QAAQ,CAAC,CAET,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMU,UAAU,GAAIC,MAAc,IAAK;EAC5CX,QAAQ,CAAC;IACPY,IAAI,EAAEd,iBAAiB,CAACe,WAAW;IACnCC,OAAO,EAAEH;EACX,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMI,WAAW,GAAIJ,MAAc,IAAK;EAC7CX,QAAQ,CAAC;IACPY,IAAI,EAAEd,iBAAiB,CAACkB,yBAAyB;IACjDF,OAAO,EAAEH;EACX,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMM,QAAQ,GAAId,IAAc,IAAK;EAC1C;;EAEA;AAAA,CACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}