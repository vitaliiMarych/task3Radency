{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task3\\\\client\\\\src\\\\components\\\\UI\\\\ButtonDiv\\\\ButtonDiv.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport cl from './ButtonDiv.module.css';\nimport ActionLink from '../actionLink/ActionLink';\nimport editIcon from '../../../assets/icons/edit.png';\nimport archiveIcon from '../../../assets/icons/archive.png';\nimport unarchiveIcon from '../../../assets/icons/unarchive.png';\nimport deleteIcon from '../../../assets/icons/delete.png';\nimport { NotesActionsTypes } from '../../../types/notesTypes';\nimport { useDispatch } from 'react-redux';\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\nimport { modalTypes } from '../../../types/modalType';\nimport { getAllNotes } from '../../../services/noteService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonDiv = ({\n  type,\n  idNote,\n  modalProperties,\n  setModalProperties\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const isArchived = type.includes('archive');\n  const deleteNote = () => {\n    dispatch({\n      type: NotesActionsTypes.DELETE_NOTE,\n      payload: idNote\n    });\n  };\n  const archiveNote = () => {\n    dispatch({\n      type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE,\n      payload: idNote\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.buttonDiv,\n    children: [/*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: editIcon,\n      alt: \"edit\",\n      onClickFunct: () => {\n        const note = getAllNotes(notes).find(note => note.id === idNote);\n        console.log('fsefsefesf');\n        setModalProperties({\n          visible: true,\n          oldNoteContent: note === null || note === void 0 ? void 0 : note.content,\n          oldNoteCategory: note === null || note === void 0 ? void 0 : note.category,\n          modalType: modalTypes.EDIT,\n          index: idNote\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), isArchived ? /*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: unarchiveIcon,\n      alt: \"unarchive\",\n      onClickFunct: archiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: archiveIcon,\n      alt: \"archive\",\n      onClickFunct: archiveNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ActionLink, {\n      imageUrl: deleteIcon,\n      alt: \"delete\",\n      onClickFunct: () => deleteNote()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonDiv, \"wtIUh3RIe4eXysSps0Ze8I0Mkxc=\", false, function () {\n  return [useDispatch, useTypedSelector];\n});\n_c = ButtonDiv;\nexport default ButtonDiv;\nvar _c;\n$RefreshReg$(_c, \"ButtonDiv\");","map":{"version":3,"names":["React","cl","ActionLink","editIcon","archiveIcon","unarchiveIcon","deleteIcon","NotesActionsTypes","useDispatch","useTypedSelector","modalTypes","getAllNotes","jsxDEV","_jsxDEV","ButtonDiv","type","idNote","modalProperties","setModalProperties","_s","dispatch","notes","state","note","isArchived","includes","deleteNote","DELETE_NOTE","payload","archiveNote","ARCHIVE_OR_UNARCHIVE_NOTE","className","buttonDiv","children","imageUrl","alt","onClickFunct","find","id","console","log","visible","oldNoteContent","content","oldNoteCategory","category","modalType","EDIT","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task3/client/src/components/UI/ButtonDiv/ButtonDiv.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport cl from './ButtonDiv.module.css';\r\nimport ActionLink from '../actionLink/ActionLink';\r\nimport editIcon from '../../../assets/icons/edit.png';\r\nimport archiveIcon from '../../../assets/icons/archive.png';\r\nimport unarchiveIcon from '../../../assets/icons/unarchive.png';\r\nimport deleteIcon from '../../../assets/icons/delete.png';\r\nimport { NotesActionsTypes } from '../../../types/notesTypes';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useTypedSelector } from '../../../hooks/useTypeSelector';\r\nimport { modalPropetiesType, modalTypes } from '../../../types/modalType';\r\nimport { getAllNotes } from '../../../services/noteService';\r\n\r\ninterface ButtonDivProps {\r\n  type : string,\r\n  idNote: number,\r\n  modalProperties: modalPropetiesType,\r\n  setModalProperties: Function\r\n}\r\n\r\nconst ButtonDiv: React.FC<ButtonDivProps> = ({\r\n  type,\r\n  idNote,\r\n  modalProperties,\r\n  setModalProperties,\r\n}) => {\r\n\r\n  const dispatch = useDispatch();\r\n  const {notes} = useTypedSelector((state) => state.note);\r\n\r\n  const isArchived = type.includes('archive');\r\n\r\n  const deleteNote = () => {\r\n    dispatch({\r\n      type: NotesActionsTypes.DELETE_NOTE,\r\n      payload: idNote\r\n    })\r\n  }\r\n\r\n  const archiveNote = () => {\r\n    dispatch({\r\n      type: NotesActionsTypes.ARCHIVE_OR_UNARCHIVE_NOTE,\r\n      payload: idNote\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className={cl.buttonDiv}>\r\n        <ActionLink imageUrl={editIcon} alt='edit' onClickFunct={() => {\r\n          const note = getAllNotes(notes).find(note => note.id === idNote)\r\n          console.log('fsefsefesf');\r\n          setModalProperties({\r\n            visible: true,\r\n            oldNoteContent: note?.content,\r\n            oldNoteCategory: note?.category,\r\n            modalType: modalTypes.EDIT,\r\n            index: idNote,\r\n          })\r\n        }}/>\r\n\r\n        {\r\n        isArchived ? \r\n          <ActionLink imageUrl={unarchiveIcon} alt='unarchive' onClickFunct={archiveNote}/> :\r\n          <ActionLink imageUrl={archiveIcon} alt='archive' onClickFunct={archiveNote}/>  \r\n        }\r\n\r\n        <ActionLink imageUrl={deleteIcon} alt='delete' onClickFunct={() => deleteNote()}/>\r\n    </div>\r\n  );\r\n}\r\n  \r\n  \r\nexport default ButtonDiv;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}