{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\UI\\\\MyForm\\\\MyForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport cl from './MyForm.module.css';\nimport MyButton from '../MyButton/MyButton';\nimport { modalType } from '../../../types/modalType';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyForm = ({\n  method\n}) => {\n  _s();\n  const onClickFunction = () => {\n    const year = new Date().getFullYear();\n    const month = new Date().getMonth() + 1;\n    const day = new Date().getDate();\n    dispatch({\n      type: NotesActionsTypes.ADD_NOTE,\n      payload: {\n        id: Math.max(...getAllNotes().map(note => note.id)) + 1,\n        createdTime: `${year}-${month}-${day}`,\n        content: noteContent,\n        category: noteCategory,\n        archived: false\n      }\n    });\n  };\n  if (method === modalType.EDIT) {}\n  const [noteContent, setNoteContent] = useState('');\n  const [noteCategory, setNoteCategory] = useState('Task');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cl.myForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteContent\",\n        children: \"Note Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"noteContent\",\n        rows: 4,\n        cols: 50,\n        value: noteContent,\n        onChange: e => setNoteContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"noteCategory\",\n        children: \"Note Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"noteCategory\",\n        value: noteCategory,\n        onChange: e => setNoteCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Task\",\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Random Thought\",\n          children: \"Random Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Idea\",\n          children: \"Idea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.row,\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: onClickFunction,\n        children: \"Save Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MyForm, \"GEFPQouCdefjqSMYDyt9/Up3Ijg=\");\n_c = MyForm;\nexport default MyForm;\nvar _c;\n$RefreshReg$(_c, \"MyForm\");","map":{"version":3,"names":["React","useState","cl","MyButton","modalType","jsxDEV","_jsxDEV","MyForm","method","_s","onClickFunction","year","Date","getFullYear","month","getMonth","day","getDate","dispatch","type","NotesActionsTypes","ADD_NOTE","payload","id","Math","max","getAllNotes","map","note","createdTime","content","noteContent","category","noteCategory","archived","EDIT","setNoteContent","setNoteCategory","className","myForm","children","row","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","rows","cols","value","onChange","e","target","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/UI/MyForm/MyForm.tsx"],"sourcesContent":["import React, {FC, useState} from 'react';\r\n\r\nimport cl from './MyForm.module.css';\r\nimport MyButton from '../MyButton/MyButton';\r\nimport { modalType } from '../../../types/modalType';\r\nimport {NoteService} from '../../../services/noteService';\r\n\r\ninterface MyFormProps {\r\n    method: modalType,\r\n}\r\n\r\nconst MyForm: FC<MyFormProps> = ({\r\n    method,\r\n}) => {\r\n\r\n    const onClickFunction = () => {\r\n        const year = new Date().getFullYear();\r\n        const month = new Date().getMonth() + 1;\r\n        const day = new Date().getDate();\r\n    \r\n        dispatch({\r\n          type: NotesActionsTypes.ADD_NOTE,\r\n          payload: { \r\n              id: Math.max(...getAllNotes().map(note => note.id)) + 1,\r\n              createdTime: `${year}-${month}-${day}`,\r\n              content: noteContent,\r\n              category: noteCategory,\r\n              archived: false,\r\n          }\r\n        });\r\n    };\r\n\r\n    if (method === modalType.EDIT){\r\n\r\n    }\r\n\r\n    const [noteContent, setNoteContent] = useState('');\r\n    const [noteCategory, setNoteCategory] = useState('Task'); \r\n\r\n  return (\r\n    <div className={cl.myForm}>\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteContent\">Note Content:</label>\r\n            <textarea id=\"noteContent\" rows={4} cols={50} \r\n                value={noteContent} onChange={e => setNoteContent(e.target.value)}></textarea>\r\n        \r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <label htmlFor=\"noteCategory\">Note Category:</label>\r\n            <select id=\"noteCategory\" value={noteCategory} \r\n                    onChange={e => setNoteCategory(e.target.value)}\r\n            >\r\n                <option value=\"Task\">Task</option>\r\n                <option value=\"Random Thought\">Random Thought</option>\r\n                <option value=\"Idea\">Idea</option>\r\n            </select>\r\n        </div>\r\n\r\n        <div className={cl.row}>\r\n            <MyButton onClickFunction={onClickFunction}>Save Note</MyButton>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default MyForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}