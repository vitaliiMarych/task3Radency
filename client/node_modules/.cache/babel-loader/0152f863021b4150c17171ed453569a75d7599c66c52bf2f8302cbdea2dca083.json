{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\components\\\\TableItem.tsx\";\nimport React from 'react';\nimport TableItemCell from './TableItemCell';\nimport { isBig } from '../utils/otherUtils';\nimport ButtonDiv from './UI/ButtonDiv/ButtonDiv';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableItem = ({\n  typeTable,\n  cells,\n  addButtons\n}) => {\n  const cl = 'notesTableRow ' + typeTable;\n  if (cells.length > 3) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl,\n      children: [cells.map((cell, index) => /*#__PURE__*/_jsxDEV(TableItemCell, {\n        haveBigItem: isBig(index),\n        children: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 39\n      }, this)), /*#__PURE__*/_jsxDEV(ButtonDiv, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl,\n      children: cells.map(cell => /*#__PURE__*/_jsxDEV(TableItemCell, {\n        children: cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 32\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = TableItem;\nexport default TableItem;\nvar _c;\n$RefreshReg$(_c, \"TableItem\");","map":{"version":3,"names":["React","TableItemCell","isBig","ButtonDiv","jsxDEV","_jsxDEV","TableItem","typeTable","cells","addButtons","cl","length","className","children","map","cell","index","haveBigItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/components/TableItem.tsx"],"sourcesContent":["import React from 'react';\r\n\r\nimport TableItemCell from './TableItemCell';\r\nimport { isBig } from '../utils/otherUtils';\r\nimport ButtonDiv from './UI/ButtonDiv/ButtonDiv';\r\n\r\ninterface TableItemProps {\r\n  typeTable: string,\r\n  cells: any[],\r\n  addButtons? : boolean,\r\n}\r\n\r\nconst TableItem: React.FC<TableItemProps> = ({\r\n  typeTable,\r\n  cells,\r\n  addButtons,\r\n}) => {\r\n\r\n  const cl = 'notesTableRow ' + typeTable;\r\n\r\n  if (cells.length > 3) {\r\n    return (\r\n      <div className={cl}>\r\n          {cells.map((cell, index) => <TableItemCell haveBigItem = {isBig(index)}>{cell}</TableItemCell>)}\r\n          \r\n\r\n          <ButtonDiv/>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return (\r\n      <div className={cl}>\r\n          {cells.map((cell) => <TableItemCell>{cell}</TableItemCell>)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n  \r\n  \r\nexport default TableItem;\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAOC,SAAS,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjD,MAAMC,SAAmC,GAAGA,CAAC;EAC3CC,SAAS;EACTC,KAAK;EACLC;AACF,CAAC,KAAK;EAEJ,MAAMC,EAAE,GAAG,gBAAgB,GAAGH,SAAS;EAEvC,IAAIC,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;IACpB,oBACEN,OAAA;MAAKO,SAAS,EAAEF,EAAG;MAAAG,QAAA,GACdL,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAKX,OAAA,CAACJ,aAAa;QAACgB,WAAW,EAAIf,KAAK,CAACc,KAAK,CAAE;QAAAH,QAAA,EAAEE;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,CAAC,eAG/FhB,OAAA,CAACF,SAAS;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC;EAEV,CAAC,MACI;IACH,oBACEhB,OAAA;MAAKO,SAAS,EAAEF,EAAG;MAAAG,QAAA,EACdL,KAAK,CAACM,GAAG,CAAEC,IAAI,iBAAKV,OAAA,CAACJ,aAAa;QAAAY,QAAA,EAAEE;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC;EAEV;AACF,CAAC;AAAAC,EAAA,GAzBKhB,SAAmC;AA4BzC,eAAeA,SAAS;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}