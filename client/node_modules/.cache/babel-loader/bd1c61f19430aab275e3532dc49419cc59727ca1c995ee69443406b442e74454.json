{"ast":null,"code":"var _jsxFileName = \"D:\\\\gitHub\\\\task2\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    notes\n  } = useTypedSelector(state => state.note);\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  const [modal, setModal] = React.useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      onClickFunction: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: activeNotes,\n      type: \"active big\",\n      isCategory: false,\n      children: \"Active list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttonWrapper\",\n      children: /*#__PURE__*/_jsxDEV(MyButton, {\n        onClickFunction: () => {\n          setModal(true);\n        },\n        children: \"Add note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: archivedNotes,\n      type: \"archive big\",\n      isCategory: false,\n      children: \"Archived list\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      data: getInfoAboutCategoryes(notes),\n      type: \"summary small\",\n      isCategory: true,\n      children: \"Summary info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Ce/zP3XwjnBSDZGEirpGujE1oa0=\", false, function () {\n  return [useTypedSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","NotesList","useTypedSelector","getActiveNotes","getArchiveNotes","getInfoAboutCategoryes","MyButton","MyModal","jsxDEV","_jsxDEV","App","_s","notes","state","note","activeNotes","archivedNotes","modal","setModal","useState","className","children","visible","setVisible","onClickFunction","fileName","_jsxFileName","lineNumber","columnNumber","data","type","isCategory","_c","$RefreshReg$"],"sources":["D:/gitHub/task2/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport './styles/App.css';\nimport NotesList from './components/Table';\nimport { useTypedSelector } from './hooks/useTypeSelector';\nimport { getActiveNotes, getArchiveNotes } from './services/noteService';\nimport { getInfoAboutCategoryes } from './services/categoryService';\nimport MyButton from './components/UI/MyButton/MyButton';\nimport MyModal from './components/UI/MyModal/MyModal';\n\nfunction App() {\n  const {notes} = useTypedSelector(state => state.note);\n\n  const activeNotes = getActiveNotes(notes);\n  const archivedNotes = getArchiveNotes(notes);\n  \n  const [modal, setModal] = React.useState(false);\n\n  return (\n    <div className=\"App\">\n      <MyModal visible={modal} setVisible={setModal} onClickFunction={() => {}}/>\n      <NotesList data={activeNotes} type='active big' isCategory = {false}>Active list</NotesList>\n      \n      <div className='buttonWrapper'>\n        <MyButton onClickFunction={() => {\n          setModal(true);\n\n        }}>Add note</MyButton>\n      </div>\n      \n      <NotesList data={archivedNotes} type='archive big' isCategory = {false}>Archived list</NotesList>\n      <NotesList data={getInfoAboutCategoryes(notes)} type='summary small' isCategory = {true}>Summary info</NotesList>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,gBAAgB,QAAQ,yBAAyB;AAC1D,SAASC,cAAc,EAAEC,eAAe,QAAQ,wBAAwB;AACxE,SAASC,sBAAsB,QAAQ,4BAA4B;AACnE,OAAOC,QAAQ,MAAM,mCAAmC;AACxD,OAAOC,OAAO,MAAM,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM;IAACC;EAAK,CAAC,GAAGV,gBAAgB,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAErD,MAAMC,WAAW,GAAGZ,cAAc,CAACS,KAAK,CAAC;EACzC,MAAMI,aAAa,GAAGZ,eAAe,CAACQ,KAAK,CAAC;EAE5C,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,KAAK,CAACmB,QAAQ,CAAC,KAAK,CAAC;EAE/C,oBACEV,OAAA;IAAKW,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBZ,OAAA,CAACF,OAAO;MAACe,OAAO,EAAEL,KAAM;MAACM,UAAU,EAAEL,QAAS;MAACM,eAAe,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3EnB,OAAA,CAACR,SAAS;MAAC4B,IAAI,EAAEd,WAAY;MAACe,IAAI,EAAC,YAAY;MAACC,UAAU,EAAI,KAAM;MAAAV,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eAE5FnB,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC5BZ,OAAA,CAACH,QAAQ;QAACkB,eAAe,EAAEA,CAAA,KAAM;UAC/BN,QAAQ,CAAC,IAAI,CAAC;QAEhB,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eAENnB,OAAA,CAACR,SAAS;MAAC4B,IAAI,EAAEb,aAAc;MAACc,IAAI,EAAC,aAAa;MAACC,UAAU,EAAI,KAAM;MAAAV,QAAA,EAAC;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC,eACjGnB,OAAA,CAACR,SAAS;MAAC4B,IAAI,EAAExB,sBAAsB,CAACO,KAAK,CAAE;MAACkB,IAAI,EAAC,eAAe;MAACC,UAAU,EAAI,IAAK;MAAAV,QAAA,EAAC;IAAY;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAW,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9G,CAAC;AAEV;AAACjB,EAAA,CAxBQD,GAAG;EAAA,QACMR,gBAAgB;AAAA;AAAA8B,EAAA,GADzBtB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}